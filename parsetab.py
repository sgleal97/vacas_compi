
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocORnonassocXORnonassocANDnonassocNOTnonassocBORnonassocBXORnonassocBANDnonassocBNOTnonassocSHIFTISHIFTDnonassocIGUALQNIGUALQnonassocMENORQMAYORQMENORIGUALQMAYORIGUALQnonassocMASMENOSnonassocPORDIVIDIDORESIDUOnonassocUMENOSABS AND ARRAY BAND BNOT BOR BXOR CADENA CHAR CORDER CORIZQ DECIMAL DIVIDIDO DOSPUNTOS ENTERO EXIT FLOAT GOTO ID IF IGUAL IGUALQ INT MAIN MAS MAYORIGUALQ MAYORQ MENORIGUALQ MENORQ MENOS NIGUALQ NOT OR PARDER PARIZQ POR PRINT PTCOMA READ RESIDUO REVALUAR SHIFTD SHIFTI UNSET VAR XORinit                   : MAIN DOSPUNTOS instruccionesinstrucciones          : instrucciones instruccioninstrucciones          : instruccioninstruccion          : asignacion\n                            | array_instr\n                            | print_instr\n                            | unset_instr\n                            | if_instr\n                            | etiqueta_instr\n                            | goto_instr\n                            array_instr            : VAR indices IGUAL exp_numerica PTCOMAindices                : indices indiceindices                : indiceindice                 : CORIZQ exp_numerica CORDERasignacion             : VAR IGUAL exp_numerica PTCOMAexp_numerica         : exp_numerica MAS exp_numerica\n                            | exp_numerica MENOS exp_numerica\n                            | exp_numerica POR exp_numerica\n                            | exp_numerica DIVIDIDO exp_numerica\n                            | exp_numerica RESIDUO exp_numerica\n                            | exp_numerica AND exp_numerica\n                            | exp_numerica OR exp_numerica\n                            | exp_numerica XOR exp_numerica\n                            | exp_numerica BAND exp_numerica\n                            | exp_numerica BOR exp_numerica\n                            | exp_numerica BXOR exp_numerica\n                            | exp_numerica SHIFTI exp_numerica\n                            | exp_numerica SHIFTD exp_numerica\n                            | exp_numerica IGUALQ exp_numerica\n                            | exp_numerica NIGUALQ exp_numerica\n                            | exp_numerica MAYORQ exp_numerica\n                            | exp_numerica MENORQ exp_numerica\n                            | exp_numerica MAYORIGUALQ exp_numerica\n                            | exp_numerica MENORIGUALQ exp_numerica\n                            | PARIZQ tipo_dato PARDER VARexp_numerica         : MENOS exp_numerica %prec UMENOS\n                            | NOT exp_numerica %prec UMENOS\n                            | BNOT exp_numerica %prec UMENOSexp_numerica           : ABS PARIZQ exp_numerica PARDERexp_numerica         : ENTERO\n                            | DECIMALexp_numerica         : VAR\n                            | VAR indicesexp_numerica           : CADENAexp_numerica           : ARRAY PARIZQ PARDERtipo_dato            : INT\n                            | FLOAT\n                            | CHARprint_instr            : PRINT PARIZQ exp_numerica PARDER PTCOMAunset_instr            : UNSET PARIZQ exp_numerica PARDER PTCOMAif_instr               : IF PARIZQ condicion_instr PARDER goto_instrcondicion_instr        : exp_numericaetiqueta_instr         : ID DOSPUNTOSgoto_instr             : GOTO ID PTCOMA'
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,4,5,6,7,8,9,10,11,12,19,27,47,49,105,106,107,108,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-2,-53,-54,-15,-11,-49,-50,-51,]),'DOSPUNTOS':([2,17,],[3,27,]),'VAR':([3,4,5,6,7,8,9,10,11,12,19,20,23,24,25,26,27,31,33,34,40,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,102,105,106,107,108,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-2,29,29,29,29,29,-53,29,29,29,29,-54,-15,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,109,-11,-49,-50,-51,]),'PRINT':([3,4,5,6,7,8,9,10,11,12,19,27,47,49,105,106,107,108,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-2,-53,-54,-15,-11,-49,-50,-51,]),'UNSET':([3,4,5,6,7,8,9,10,11,12,19,27,47,49,105,106,107,108,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-2,-53,-54,-15,-11,-49,-50,-51,]),'IF':([3,4,5,6,7,8,9,10,11,12,19,27,47,49,105,106,107,108,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-2,-53,-54,-15,-11,-49,-50,-51,]),'ID':([3,4,5,6,7,8,9,10,11,12,18,19,27,47,49,105,106,107,108,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,28,-2,-53,-54,-15,-11,-49,-50,-51,]),'GOTO':([3,4,5,6,7,8,9,10,11,12,19,27,47,49,82,105,106,107,108,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-2,-53,-54,-15,18,-11,-49,-50,-51,]),'IGUAL':([13,21,22,41,79,],[20,40,-13,-12,-14,]),'CORIZQ':([13,21,22,29,41,48,79,],[23,23,-13,23,-12,23,-14,]),'PARIZQ':([14,15,16,20,23,24,25,26,31,33,34,35,39,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[24,25,26,32,32,32,32,32,32,32,32,76,77,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'MENOS':([20,22,23,24,25,26,29,30,31,33,34,36,37,38,40,41,42,43,44,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,74,75,76,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[31,-13,31,31,31,31,-42,51,31,31,31,-40,-41,-44,31,-12,51,51,51,51,-43,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-36,-37,-38,31,51,-14,None,None,-18,-19,-20,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-45,-35,-39,]),'NOT':([20,23,24,25,26,31,33,34,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'BNOT':([20,23,24,25,26,31,33,34,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ABS':([20,23,24,25,26,31,33,34,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ENTERO':([20,23,24,25,26,31,33,34,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'DECIMAL':([20,23,24,25,26,31,33,34,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'CADENA':([20,23,24,25,26,31,33,34,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'ARRAY':([20,23,24,25,26,31,33,34,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'PTCOMA':([22,28,29,30,36,37,38,41,48,69,74,75,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,109,110,],[-13,47,-42,49,-40,-41,-44,-12,-43,-36,-37,-38,105,-14,106,107,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-45,-35,-39,]),'MAS':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,50,-40,-41,-44,-12,50,50,50,50,-43,-36,-37,-38,50,-14,None,None,-18,-19,-20,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-45,-35,-39,]),'POR':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,52,-40,-41,-44,-12,52,52,52,52,-43,-36,-37,-38,52,-14,52,52,None,None,None,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-45,-35,-39,]),'DIVIDIDO':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,53,-40,-41,-44,-12,53,53,53,53,-43,-36,-37,-38,53,-14,53,53,None,None,None,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-45,-35,-39,]),'RESIDUO':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,54,-40,-41,-44,-12,54,54,54,54,-43,-36,-37,-38,54,-14,54,54,None,None,None,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-45,-35,-39,]),'AND':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,55,-40,-41,-44,-12,55,55,55,55,-43,-36,-37,-38,55,-14,-16,-17,-18,-19,-20,None,55,55,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,55,-45,-35,-39,]),'OR':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,56,-40,-41,-44,-12,56,56,56,56,-43,-36,-37,-38,56,-14,-16,-17,-18,-19,-20,-21,None,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,56,-45,-35,-39,]),'XOR':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,57,-40,-41,-44,-12,57,57,57,57,-43,-36,-37,-38,57,-14,-16,-17,-18,-19,-20,-21,57,None,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,57,-45,-35,-39,]),'BAND':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,58,-40,-41,-44,-12,58,58,58,58,-43,-36,-37,-38,58,-14,-16,-17,-18,-19,-20,58,58,58,None,58,58,-27,-28,-29,-30,-31,-32,-33,-34,58,-45,-35,-39,]),'BOR':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,59,-40,-41,-44,-12,59,59,59,59,-43,-36,-37,-38,59,-14,-16,-17,-18,-19,-20,59,59,59,-24,None,-26,-27,-28,-29,-30,-31,-32,-33,-34,59,-45,-35,-39,]),'BXOR':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,60,-40,-41,-44,-12,60,60,60,60,-43,-36,-37,-38,60,-14,-16,-17,-18,-19,-20,60,60,60,-24,60,None,-27,-28,-29,-30,-31,-32,-33,-34,60,-45,-35,-39,]),'SHIFTI':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,61,-40,-41,-44,-12,61,61,61,61,-43,-36,-37,-38,61,-14,-16,-17,-18,-19,-20,61,61,61,61,61,61,None,None,-29,-30,-31,-32,-33,-34,61,-45,-35,-39,]),'SHIFTD':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,62,-40,-41,-44,-12,62,62,62,62,-43,-36,-37,-38,62,-14,-16,-17,-18,-19,-20,62,62,62,62,62,62,None,None,-29,-30,-31,-32,-33,-34,62,-45,-35,-39,]),'IGUALQ':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,63,-40,-41,-44,-12,63,63,63,63,-43,-36,-37,-38,63,-14,-16,-17,-18,-19,-20,63,63,63,63,63,63,63,63,None,None,-31,-32,-33,-34,63,-45,-35,-39,]),'NIGUALQ':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,64,-40,-41,-44,-12,64,64,64,64,-43,-36,-37,-38,64,-14,-16,-17,-18,-19,-20,64,64,64,64,64,64,64,64,None,None,-31,-32,-33,-34,64,-45,-35,-39,]),'MAYORQ':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,65,-40,-41,-44,-12,65,65,65,65,-43,-36,-37,-38,65,-14,-16,-17,-18,-19,-20,65,65,65,65,65,65,65,65,65,65,None,None,None,None,65,-45,-35,-39,]),'MENORQ':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,66,-40,-41,-44,-12,66,66,66,66,-43,-36,-37,-38,66,-14,-16,-17,-18,-19,-20,66,66,66,66,66,66,66,66,66,66,None,None,None,None,66,-45,-35,-39,]),'MAYORIGUALQ':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,67,-40,-41,-44,-12,67,67,67,67,-43,-36,-37,-38,67,-14,-16,-17,-18,-19,-20,67,67,67,67,67,67,67,67,67,67,None,None,None,None,67,-45,-35,-39,]),'MENORIGUALQ':([22,29,30,36,37,38,41,42,43,44,46,48,69,74,75,78,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,68,-40,-41,-44,-12,68,68,68,68,-43,-36,-37,-38,68,-14,-16,-17,-18,-19,-20,68,68,68,68,68,68,68,68,68,68,None,None,None,None,68,-45,-35,-39,]),'CORDER':([22,29,36,37,38,41,42,48,69,74,75,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,109,110,],[-13,-42,-40,-41,-44,-12,79,-43,-36,-37,-38,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-45,-35,-39,]),'PARDER':([22,29,36,37,38,41,43,44,45,46,48,69,70,71,72,73,74,75,77,79,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,109,110,],[-13,-42,-40,-41,-44,-12,80,81,82,-52,-43,-36,102,-46,-47,-48,-37,-38,104,-14,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,110,-45,-35,-39,]),'INT':([32,],[71,]),'FLOAT':([32,],[72,]),'CHAR':([32,],[73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([3,],[4,]),'instruccion':([3,4,],[5,19,]),'asignacion':([3,4,],[6,6,]),'array_instr':([3,4,],[7,7,]),'print_instr':([3,4,],[8,8,]),'unset_instr':([3,4,],[9,9,]),'if_instr':([3,4,],[10,10,]),'etiqueta_instr':([3,4,],[11,11,]),'goto_instr':([3,4,82,],[12,12,108,]),'indices':([13,29,],[21,48,]),'indice':([13,21,29,48,],[22,41,22,41,]),'exp_numerica':([20,23,24,25,26,31,33,34,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,76,],[30,42,43,44,46,69,74,75,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,]),'condicion_instr':([26,],[45,]),'tipo_dato':([32,],[70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> MAIN DOSPUNTOS instrucciones','init',3,'p_init','gramatica.py',178),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_lista_instrucciones','gramatica.py',205),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',210),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','gramatica.py',214),
  ('instruccion -> array_instr','instruccion',1,'p_instruccion','gramatica.py',215),
  ('instruccion -> print_instr','instruccion',1,'p_instruccion','gramatica.py',216),
  ('instruccion -> unset_instr','instruccion',1,'p_instruccion','gramatica.py',217),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','gramatica.py',218),
  ('instruccion -> etiqueta_instr','instruccion',1,'p_instruccion','gramatica.py',219),
  ('instruccion -> goto_instr','instruccion',1,'p_instruccion','gramatica.py',220),
  ('array_instr -> VAR indices IGUAL exp_numerica PTCOMA','array_instr',5,'p_array_instr','gramatica.py',225),
  ('indices -> indices indice','indices',2,'p_lista_indices','gramatica.py',229),
  ('indices -> indice','indices',1,'p_indices_indice','gramatica.py',234),
  ('indice -> CORIZQ exp_numerica CORDER','indice',3,'p_indice','gramatica.py',238),
  ('asignacion -> VAR IGUAL exp_numerica PTCOMA','asignacion',4,'p_asignacion','gramatica.py',242),
  ('exp_numerica -> exp_numerica MAS exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',246),
  ('exp_numerica -> exp_numerica MENOS exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',247),
  ('exp_numerica -> exp_numerica POR exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',248),
  ('exp_numerica -> exp_numerica DIVIDIDO exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',249),
  ('exp_numerica -> exp_numerica RESIDUO exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',250),
  ('exp_numerica -> exp_numerica AND exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',251),
  ('exp_numerica -> exp_numerica OR exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',252),
  ('exp_numerica -> exp_numerica XOR exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',253),
  ('exp_numerica -> exp_numerica BAND exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',254),
  ('exp_numerica -> exp_numerica BOR exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',255),
  ('exp_numerica -> exp_numerica BXOR exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',256),
  ('exp_numerica -> exp_numerica SHIFTI exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',257),
  ('exp_numerica -> exp_numerica SHIFTD exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',258),
  ('exp_numerica -> exp_numerica IGUALQ exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',259),
  ('exp_numerica -> exp_numerica NIGUALQ exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',260),
  ('exp_numerica -> exp_numerica MAYORQ exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',261),
  ('exp_numerica -> exp_numerica MENORQ exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',262),
  ('exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',263),
  ('exp_numerica -> exp_numerica MENORIGUALQ exp_numerica','exp_numerica',3,'p_exp_numerica_binaria','gramatica.py',264),
  ('exp_numerica -> PARIZQ tipo_dato PARDER VAR','exp_numerica',4,'p_exp_numerica_binaria','gramatica.py',265),
  ('exp_numerica -> MENOS exp_numerica','exp_numerica',2,'p_exp_numerica_unaria','gramatica.py',291),
  ('exp_numerica -> NOT exp_numerica','exp_numerica',2,'p_exp_numerica_unaria','gramatica.py',292),
  ('exp_numerica -> BNOT exp_numerica','exp_numerica',2,'p_exp_numerica_unaria','gramatica.py',293),
  ('exp_numerica -> ABS PARIZQ exp_numerica PARDER','exp_numerica',4,'p_exp_numerica_abs','gramatica.py',299),
  ('exp_numerica -> ENTERO','exp_numerica',1,'p_exp_numerica_valores','gramatica.py',303),
  ('exp_numerica -> DECIMAL','exp_numerica',1,'p_exp_numerica_valores','gramatica.py',304),
  ('exp_numerica -> VAR','exp_numerica',1,'p_exp_id','gramatica.py',308),
  ('exp_numerica -> VAR indices','exp_numerica',2,'p_exp_id','gramatica.py',309),
  ('exp_numerica -> CADENA','exp_numerica',1,'p_exp_cadena','gramatica.py',316),
  ('exp_numerica -> ARRAY PARIZQ PARDER','exp_numerica',3,'p_exp_array','gramatica.py',320),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','gramatica.py',324),
  ('tipo_dato -> FLOAT','tipo_dato',1,'p_tipo_dato','gramatica.py',325),
  ('tipo_dato -> CHAR','tipo_dato',1,'p_tipo_dato','gramatica.py',326),
  ('print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA','print_instr',5,'p_print','gramatica.py',330),
  ('unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA','unset_instr',5,'p_unse','gramatica.py',334),
  ('if_instr -> IF PARIZQ condicion_instr PARDER goto_instr','if_instr',5,'p_if','gramatica.py',338),
  ('condicion_instr -> exp_numerica','condicion_instr',1,'p_condicion','gramatica.py',341),
  ('etiqueta_instr -> ID DOSPUNTOS','etiqueta_instr',2,'p_etiqueta','gramatica.py',344),
  ('goto_instr -> GOTO ID PTCOMA','goto_instr',3,'p_goto','gramatica.py',353),
]
