Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EXIT
    READ
    REVALUAR

Grammar

Rule 0     S' -> init
Rule 1     init -> MAIN DOSPUNTOS instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> asignacion
Rule 5     instruccion -> array_instr
Rule 6     instruccion -> print_instr
Rule 7     instruccion -> unset_instr
Rule 8     instruccion -> if_instr
Rule 9     instruccion -> etiqueta_instr
Rule 10    array_instr -> VAR indices IGUAL exp_numerica PTCOMA
Rule 11    indices -> indices indice
Rule 12    indices -> indice
Rule 13    indice -> CORIZQ exp_numerica CORDER
Rule 14    asignacion -> VAR IGUAL exp_numerica PTCOMA
Rule 15    exp_numerica -> exp_numerica MAS exp_numerica
Rule 16    exp_numerica -> exp_numerica MENOS exp_numerica
Rule 17    exp_numerica -> exp_numerica POR exp_numerica
Rule 18    exp_numerica -> exp_numerica DIVIDIDO exp_numerica
Rule 19    exp_numerica -> exp_numerica RESIDUO exp_numerica
Rule 20    exp_numerica -> exp_numerica AND exp_numerica
Rule 21    exp_numerica -> exp_numerica OR exp_numerica
Rule 22    exp_numerica -> exp_numerica XOR exp_numerica
Rule 23    exp_numerica -> exp_numerica BAND exp_numerica
Rule 24    exp_numerica -> exp_numerica BOR exp_numerica
Rule 25    exp_numerica -> exp_numerica BXOR exp_numerica
Rule 26    exp_numerica -> exp_numerica SHIFTI exp_numerica
Rule 27    exp_numerica -> exp_numerica SHIFTD exp_numerica
Rule 28    exp_numerica -> exp_numerica IGUALQ exp_numerica
Rule 29    exp_numerica -> exp_numerica NIGUALQ exp_numerica
Rule 30    exp_numerica -> exp_numerica MAYORQ exp_numerica
Rule 31    exp_numerica -> exp_numerica MENORQ exp_numerica
Rule 32    exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica
Rule 33    exp_numerica -> exp_numerica MENORIGUALQ exp_numerica
Rule 34    exp_numerica -> PARIZQ tipo_dato PARDER VAR
Rule 35    exp_numerica -> MENOS exp_numerica
Rule 36    exp_numerica -> NOT exp_numerica
Rule 37    exp_numerica -> BNOT exp_numerica
Rule 38    exp_numerica -> ABS PARIZQ exp_numerica PARDER
Rule 39    exp_numerica -> ENTERO
Rule 40    exp_numerica -> DECIMAL
Rule 41    exp_numerica -> VAR
Rule 42    exp_numerica -> VAR indices
Rule 43    exp_numerica -> CADENA
Rule 44    exp_numerica -> ARRAY PARIZQ PARDER
Rule 45    tipo_dato -> INT
Rule 46    tipo_dato -> FLOAT
Rule 47    tipo_dato -> CHAR
Rule 48    print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA
Rule 49    unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA
Rule 50    if_instr -> IF PARIZQ condicion_instr PARDER goto_instr
Rule 51    condicion_instr -> exp_numerica
Rule 52    etiqueta_instr -> ID DOSPUNTOS
Rule 53    goto_instr -> GOTO ID PTCOMA

Terminals, with rules where they appear

ABS                  : 38
AND                  : 20
ARRAY                : 44
BAND                 : 23
BNOT                 : 37
BOR                  : 24
BXOR                 : 25
CADENA               : 43
CHAR                 : 47
CORDER               : 13
CORIZQ               : 13
DECIMAL              : 40
DIVIDIDO             : 18
DOSPUNTOS            : 1 52
ENTERO               : 39
EXIT                 : 
FLOAT                : 46
GOTO                 : 53
ID                   : 52 53
IF                   : 50
IGUAL                : 10 14
IGUALQ               : 28
INT                  : 45
MAIN                 : 1
MAS                  : 15
MAYORIGUALQ          : 32
MAYORQ               : 30
MENORIGUALQ          : 33
MENORQ               : 31
MENOS                : 16 35
NIGUALQ              : 29
NOT                  : 36
OR                   : 21
PARDER               : 34 38 44 48 49 50
PARIZQ               : 34 38 44 48 49 50
POR                  : 17
PRINT                : 48
PTCOMA               : 10 14 48 49 53
READ                 : 
RESIDUO              : 19
REVALUAR             : 
SHIFTD               : 27
SHIFTI               : 26
UNSET                : 49
VAR                  : 10 14 34 41 42
XOR                  : 22
error                : 

Nonterminals, with rules where they appear

array_instr          : 5
asignacion           : 4
condicion_instr      : 50
etiqueta_instr       : 9
exp_numerica         : 10 13 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 35 36 37 38 48 49 51
goto_instr           : 50
if_instr             : 8
indice               : 11 12
indices              : 10 11 42
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
print_instr          : 6
tipo_dato            : 34
unset_instr          : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . MAIN DOSPUNTOS instrucciones

    MAIN            shift and go to state 2

    init                           shift and go to state 1

state 1

    (0) S' -> init .



state 2

    (1) init -> MAIN . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 3


state 3

    (1) init -> MAIN DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . asignacion
    (5) instruccion -> . array_instr
    (6) instruccion -> . print_instr
    (7) instruccion -> . unset_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . etiqueta_instr
    (14) asignacion -> . VAR IGUAL exp_numerica PTCOMA
    (10) array_instr -> . VAR indices IGUAL exp_numerica PTCOMA
    (48) print_instr -> . PRINT PARIZQ exp_numerica PARDER PTCOMA
    (49) unset_instr -> . UNSET PARIZQ exp_numerica PARDER PTCOMA
    (50) if_instr -> . IF PARIZQ condicion_instr PARDER goto_instr
    (52) etiqueta_instr -> . ID DOSPUNTOS

    VAR             shift and go to state 12
    PRINT           shift and go to state 13
    UNSET           shift and go to state 14
    IF              shift and go to state 15
    ID              shift and go to state 16

    instrucciones                  shift and go to state 4
    instruccion                    shift and go to state 5
    asignacion                     shift and go to state 6
    array_instr                    shift and go to state 7
    print_instr                    shift and go to state 8
    unset_instr                    shift and go to state 9
    if_instr                       shift and go to state 10
    etiqueta_instr                 shift and go to state 11

state 4

    (1) init -> MAIN DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . asignacion
    (5) instruccion -> . array_instr
    (6) instruccion -> . print_instr
    (7) instruccion -> . unset_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . etiqueta_instr
    (14) asignacion -> . VAR IGUAL exp_numerica PTCOMA
    (10) array_instr -> . VAR indices IGUAL exp_numerica PTCOMA
    (48) print_instr -> . PRINT PARIZQ exp_numerica PARDER PTCOMA
    (49) unset_instr -> . UNSET PARIZQ exp_numerica PARDER PTCOMA
    (50) if_instr -> . IF PARIZQ condicion_instr PARDER goto_instr
    (52) etiqueta_instr -> . ID DOSPUNTOS

    $end            reduce using rule 1 (init -> MAIN DOSPUNTOS instrucciones .)
    VAR             shift and go to state 12
    PRINT           shift and go to state 13
    UNSET           shift and go to state 14
    IF              shift and go to state 15
    ID              shift and go to state 16

    instruccion                    shift and go to state 17
    asignacion                     shift and go to state 6
    array_instr                    shift and go to state 7
    print_instr                    shift and go to state 8
    unset_instr                    shift and go to state 9
    if_instr                       shift and go to state 10
    etiqueta_instr                 shift and go to state 11

state 5

    (3) instrucciones -> instruccion .

    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    UNSET           reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 6

    (4) instruccion -> asignacion .

    VAR             reduce using rule 4 (instruccion -> asignacion .)
    PRINT           reduce using rule 4 (instruccion -> asignacion .)
    UNSET           reduce using rule 4 (instruccion -> asignacion .)
    IF              reduce using rule 4 (instruccion -> asignacion .)
    ID              reduce using rule 4 (instruccion -> asignacion .)
    $end            reduce using rule 4 (instruccion -> asignacion .)


state 7

    (5) instruccion -> array_instr .

    VAR             reduce using rule 5 (instruccion -> array_instr .)
    PRINT           reduce using rule 5 (instruccion -> array_instr .)
    UNSET           reduce using rule 5 (instruccion -> array_instr .)
    IF              reduce using rule 5 (instruccion -> array_instr .)
    ID              reduce using rule 5 (instruccion -> array_instr .)
    $end            reduce using rule 5 (instruccion -> array_instr .)


state 8

    (6) instruccion -> print_instr .

    VAR             reduce using rule 6 (instruccion -> print_instr .)
    PRINT           reduce using rule 6 (instruccion -> print_instr .)
    UNSET           reduce using rule 6 (instruccion -> print_instr .)
    IF              reduce using rule 6 (instruccion -> print_instr .)
    ID              reduce using rule 6 (instruccion -> print_instr .)
    $end            reduce using rule 6 (instruccion -> print_instr .)


state 9

    (7) instruccion -> unset_instr .

    VAR             reduce using rule 7 (instruccion -> unset_instr .)
    PRINT           reduce using rule 7 (instruccion -> unset_instr .)
    UNSET           reduce using rule 7 (instruccion -> unset_instr .)
    IF              reduce using rule 7 (instruccion -> unset_instr .)
    ID              reduce using rule 7 (instruccion -> unset_instr .)
    $end            reduce using rule 7 (instruccion -> unset_instr .)


state 10

    (8) instruccion -> if_instr .

    VAR             reduce using rule 8 (instruccion -> if_instr .)
    PRINT           reduce using rule 8 (instruccion -> if_instr .)
    UNSET           reduce using rule 8 (instruccion -> if_instr .)
    IF              reduce using rule 8 (instruccion -> if_instr .)
    ID              reduce using rule 8 (instruccion -> if_instr .)
    $end            reduce using rule 8 (instruccion -> if_instr .)


state 11

    (9) instruccion -> etiqueta_instr .

    VAR             reduce using rule 9 (instruccion -> etiqueta_instr .)
    PRINT           reduce using rule 9 (instruccion -> etiqueta_instr .)
    UNSET           reduce using rule 9 (instruccion -> etiqueta_instr .)
    IF              reduce using rule 9 (instruccion -> etiqueta_instr .)
    ID              reduce using rule 9 (instruccion -> etiqueta_instr .)
    $end            reduce using rule 9 (instruccion -> etiqueta_instr .)


state 12

    (14) asignacion -> VAR . IGUAL exp_numerica PTCOMA
    (10) array_instr -> VAR . indices IGUAL exp_numerica PTCOMA
    (11) indices -> . indices indice
    (12) indices -> . indice
    (13) indice -> . CORIZQ exp_numerica CORDER

    IGUAL           shift and go to state 18
    CORIZQ          shift and go to state 21

    indices                        shift and go to state 19
    indice                         shift and go to state 20

state 13

    (48) print_instr -> PRINT . PARIZQ exp_numerica PARDER PTCOMA

    PARIZQ          shift and go to state 22


state 14

    (49) unset_instr -> UNSET . PARIZQ exp_numerica PARDER PTCOMA

    PARIZQ          shift and go to state 23


state 15

    (50) if_instr -> IF . PARIZQ condicion_instr PARDER goto_instr

    PARIZQ          shift and go to state 24


state 16

    (52) etiqueta_instr -> ID . DOSPUNTOS

    DOSPUNTOS       shift and go to state 25


state 17

    (2) instrucciones -> instrucciones instruccion .

    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    UNSET           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 18

    (14) asignacion -> VAR IGUAL . exp_numerica PTCOMA
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 27

state 19

    (10) array_instr -> VAR indices . IGUAL exp_numerica PTCOMA
    (11) indices -> indices . indice
    (13) indice -> . CORIZQ exp_numerica CORDER

    IGUAL           shift and go to state 37
    CORIZQ          shift and go to state 21

    indice                         shift and go to state 38

state 20

    (12) indices -> indice .

    IGUAL           reduce using rule 12 (indices -> indice .)
    CORIZQ          reduce using rule 12 (indices -> indice .)
    PTCOMA          reduce using rule 12 (indices -> indice .)
    MAS             reduce using rule 12 (indices -> indice .)
    MENOS           reduce using rule 12 (indices -> indice .)
    POR             reduce using rule 12 (indices -> indice .)
    DIVIDIDO        reduce using rule 12 (indices -> indice .)
    RESIDUO         reduce using rule 12 (indices -> indice .)
    AND             reduce using rule 12 (indices -> indice .)
    OR              reduce using rule 12 (indices -> indice .)
    XOR             reduce using rule 12 (indices -> indice .)
    BAND            reduce using rule 12 (indices -> indice .)
    BOR             reduce using rule 12 (indices -> indice .)
    BXOR            reduce using rule 12 (indices -> indice .)
    SHIFTI          reduce using rule 12 (indices -> indice .)
    SHIFTD          reduce using rule 12 (indices -> indice .)
    IGUALQ          reduce using rule 12 (indices -> indice .)
    NIGUALQ         reduce using rule 12 (indices -> indice .)
    MAYORQ          reduce using rule 12 (indices -> indice .)
    MENORQ          reduce using rule 12 (indices -> indice .)
    MAYORIGUALQ     reduce using rule 12 (indices -> indice .)
    MENORIGUALQ     reduce using rule 12 (indices -> indice .)
    CORDER          reduce using rule 12 (indices -> indice .)
    PARDER          reduce using rule 12 (indices -> indice .)


state 21

    (13) indice -> CORIZQ . exp_numerica CORDER
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 39

state 22

    (48) print_instr -> PRINT PARIZQ . exp_numerica PARDER PTCOMA
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 40

state 23

    (49) unset_instr -> UNSET PARIZQ . exp_numerica PARDER PTCOMA
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 41

state 24

    (50) if_instr -> IF PARIZQ . condicion_instr PARDER goto_instr
    (51) condicion_instr -> . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    condicion_instr                shift and go to state 42
    exp_numerica                   shift and go to state 43

state 25

    (52) etiqueta_instr -> ID DOSPUNTOS .

    VAR             reduce using rule 52 (etiqueta_instr -> ID DOSPUNTOS .)
    PRINT           reduce using rule 52 (etiqueta_instr -> ID DOSPUNTOS .)
    UNSET           reduce using rule 52 (etiqueta_instr -> ID DOSPUNTOS .)
    IF              reduce using rule 52 (etiqueta_instr -> ID DOSPUNTOS .)
    ID              reduce using rule 52 (etiqueta_instr -> ID DOSPUNTOS .)
    $end            reduce using rule 52 (etiqueta_instr -> ID DOSPUNTOS .)


state 26

    (41) exp_numerica -> VAR .
    (42) exp_numerica -> VAR . indices
    (11) indices -> . indices indice
    (12) indices -> . indice
    (13) indice -> . CORIZQ exp_numerica CORDER

    PTCOMA          reduce using rule 41 (exp_numerica -> VAR .)
    MAS             reduce using rule 41 (exp_numerica -> VAR .)
    MENOS           reduce using rule 41 (exp_numerica -> VAR .)
    POR             reduce using rule 41 (exp_numerica -> VAR .)
    DIVIDIDO        reduce using rule 41 (exp_numerica -> VAR .)
    RESIDUO         reduce using rule 41 (exp_numerica -> VAR .)
    AND             reduce using rule 41 (exp_numerica -> VAR .)
    OR              reduce using rule 41 (exp_numerica -> VAR .)
    XOR             reduce using rule 41 (exp_numerica -> VAR .)
    BAND            reduce using rule 41 (exp_numerica -> VAR .)
    BOR             reduce using rule 41 (exp_numerica -> VAR .)
    BXOR            reduce using rule 41 (exp_numerica -> VAR .)
    SHIFTI          reduce using rule 41 (exp_numerica -> VAR .)
    SHIFTD          reduce using rule 41 (exp_numerica -> VAR .)
    IGUALQ          reduce using rule 41 (exp_numerica -> VAR .)
    NIGUALQ         reduce using rule 41 (exp_numerica -> VAR .)
    MAYORQ          reduce using rule 41 (exp_numerica -> VAR .)
    MENORQ          reduce using rule 41 (exp_numerica -> VAR .)
    MAYORIGUALQ     reduce using rule 41 (exp_numerica -> VAR .)
    MENORIGUALQ     reduce using rule 41 (exp_numerica -> VAR .)
    CORDER          reduce using rule 41 (exp_numerica -> VAR .)
    PARDER          reduce using rule 41 (exp_numerica -> VAR .)
    CORIZQ          shift and go to state 21

    indices                        shift and go to state 44
    indice                         shift and go to state 20

state 27

    (14) asignacion -> VAR IGUAL exp_numerica . PTCOMA
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          shift and go to state 45
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    XOR             shift and go to state 53
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64


state 28

    (35) exp_numerica -> MENOS . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 65

state 29

    (34) exp_numerica -> PARIZQ . tipo_dato PARDER VAR
    (45) tipo_dato -> . INT
    (46) tipo_dato -> . FLOAT
    (47) tipo_dato -> . CHAR

    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    CHAR            shift and go to state 69

    tipo_dato                      shift and go to state 66

state 30

    (36) exp_numerica -> NOT . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 70

state 31

    (37) exp_numerica -> BNOT . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 71

state 32

    (38) exp_numerica -> ABS . PARIZQ exp_numerica PARDER

    PARIZQ          shift and go to state 72


state 33

    (39) exp_numerica -> ENTERO .

    PTCOMA          reduce using rule 39 (exp_numerica -> ENTERO .)
    MAS             reduce using rule 39 (exp_numerica -> ENTERO .)
    MENOS           reduce using rule 39 (exp_numerica -> ENTERO .)
    POR             reduce using rule 39 (exp_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 39 (exp_numerica -> ENTERO .)
    RESIDUO         reduce using rule 39 (exp_numerica -> ENTERO .)
    AND             reduce using rule 39 (exp_numerica -> ENTERO .)
    OR              reduce using rule 39 (exp_numerica -> ENTERO .)
    XOR             reduce using rule 39 (exp_numerica -> ENTERO .)
    BAND            reduce using rule 39 (exp_numerica -> ENTERO .)
    BOR             reduce using rule 39 (exp_numerica -> ENTERO .)
    BXOR            reduce using rule 39 (exp_numerica -> ENTERO .)
    SHIFTI          reduce using rule 39 (exp_numerica -> ENTERO .)
    SHIFTD          reduce using rule 39 (exp_numerica -> ENTERO .)
    IGUALQ          reduce using rule 39 (exp_numerica -> ENTERO .)
    NIGUALQ         reduce using rule 39 (exp_numerica -> ENTERO .)
    MAYORQ          reduce using rule 39 (exp_numerica -> ENTERO .)
    MENORQ          reduce using rule 39 (exp_numerica -> ENTERO .)
    MAYORIGUALQ     reduce using rule 39 (exp_numerica -> ENTERO .)
    MENORIGUALQ     reduce using rule 39 (exp_numerica -> ENTERO .)
    CORDER          reduce using rule 39 (exp_numerica -> ENTERO .)
    PARDER          reduce using rule 39 (exp_numerica -> ENTERO .)


state 34

    (40) exp_numerica -> DECIMAL .

    PTCOMA          reduce using rule 40 (exp_numerica -> DECIMAL .)
    MAS             reduce using rule 40 (exp_numerica -> DECIMAL .)
    MENOS           reduce using rule 40 (exp_numerica -> DECIMAL .)
    POR             reduce using rule 40 (exp_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 40 (exp_numerica -> DECIMAL .)
    RESIDUO         reduce using rule 40 (exp_numerica -> DECIMAL .)
    AND             reduce using rule 40 (exp_numerica -> DECIMAL .)
    OR              reduce using rule 40 (exp_numerica -> DECIMAL .)
    XOR             reduce using rule 40 (exp_numerica -> DECIMAL .)
    BAND            reduce using rule 40 (exp_numerica -> DECIMAL .)
    BOR             reduce using rule 40 (exp_numerica -> DECIMAL .)
    BXOR            reduce using rule 40 (exp_numerica -> DECIMAL .)
    SHIFTI          reduce using rule 40 (exp_numerica -> DECIMAL .)
    SHIFTD          reduce using rule 40 (exp_numerica -> DECIMAL .)
    IGUALQ          reduce using rule 40 (exp_numerica -> DECIMAL .)
    NIGUALQ         reduce using rule 40 (exp_numerica -> DECIMAL .)
    MAYORQ          reduce using rule 40 (exp_numerica -> DECIMAL .)
    MENORQ          reduce using rule 40 (exp_numerica -> DECIMAL .)
    MAYORIGUALQ     reduce using rule 40 (exp_numerica -> DECIMAL .)
    MENORIGUALQ     reduce using rule 40 (exp_numerica -> DECIMAL .)
    CORDER          reduce using rule 40 (exp_numerica -> DECIMAL .)
    PARDER          reduce using rule 40 (exp_numerica -> DECIMAL .)


state 35

    (43) exp_numerica -> CADENA .

    PTCOMA          reduce using rule 43 (exp_numerica -> CADENA .)
    MAS             reduce using rule 43 (exp_numerica -> CADENA .)
    MENOS           reduce using rule 43 (exp_numerica -> CADENA .)
    POR             reduce using rule 43 (exp_numerica -> CADENA .)
    DIVIDIDO        reduce using rule 43 (exp_numerica -> CADENA .)
    RESIDUO         reduce using rule 43 (exp_numerica -> CADENA .)
    AND             reduce using rule 43 (exp_numerica -> CADENA .)
    OR              reduce using rule 43 (exp_numerica -> CADENA .)
    XOR             reduce using rule 43 (exp_numerica -> CADENA .)
    BAND            reduce using rule 43 (exp_numerica -> CADENA .)
    BOR             reduce using rule 43 (exp_numerica -> CADENA .)
    BXOR            reduce using rule 43 (exp_numerica -> CADENA .)
    SHIFTI          reduce using rule 43 (exp_numerica -> CADENA .)
    SHIFTD          reduce using rule 43 (exp_numerica -> CADENA .)
    IGUALQ          reduce using rule 43 (exp_numerica -> CADENA .)
    NIGUALQ         reduce using rule 43 (exp_numerica -> CADENA .)
    MAYORQ          reduce using rule 43 (exp_numerica -> CADENA .)
    MENORQ          reduce using rule 43 (exp_numerica -> CADENA .)
    MAYORIGUALQ     reduce using rule 43 (exp_numerica -> CADENA .)
    MENORIGUALQ     reduce using rule 43 (exp_numerica -> CADENA .)
    CORDER          reduce using rule 43 (exp_numerica -> CADENA .)
    PARDER          reduce using rule 43 (exp_numerica -> CADENA .)


state 36

    (44) exp_numerica -> ARRAY . PARIZQ PARDER

    PARIZQ          shift and go to state 73


state 37

    (10) array_instr -> VAR indices IGUAL . exp_numerica PTCOMA
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 74

state 38

    (11) indices -> indices indice .

    IGUAL           reduce using rule 11 (indices -> indices indice .)
    CORIZQ          reduce using rule 11 (indices -> indices indice .)
    PTCOMA          reduce using rule 11 (indices -> indices indice .)
    MAS             reduce using rule 11 (indices -> indices indice .)
    MENOS           reduce using rule 11 (indices -> indices indice .)
    POR             reduce using rule 11 (indices -> indices indice .)
    DIVIDIDO        reduce using rule 11 (indices -> indices indice .)
    RESIDUO         reduce using rule 11 (indices -> indices indice .)
    AND             reduce using rule 11 (indices -> indices indice .)
    OR              reduce using rule 11 (indices -> indices indice .)
    XOR             reduce using rule 11 (indices -> indices indice .)
    BAND            reduce using rule 11 (indices -> indices indice .)
    BOR             reduce using rule 11 (indices -> indices indice .)
    BXOR            reduce using rule 11 (indices -> indices indice .)
    SHIFTI          reduce using rule 11 (indices -> indices indice .)
    SHIFTD          reduce using rule 11 (indices -> indices indice .)
    IGUALQ          reduce using rule 11 (indices -> indices indice .)
    NIGUALQ         reduce using rule 11 (indices -> indices indice .)
    MAYORQ          reduce using rule 11 (indices -> indices indice .)
    MENORQ          reduce using rule 11 (indices -> indices indice .)
    MAYORIGUALQ     reduce using rule 11 (indices -> indices indice .)
    MENORIGUALQ     reduce using rule 11 (indices -> indices indice .)
    CORDER          reduce using rule 11 (indices -> indices indice .)
    PARDER          reduce using rule 11 (indices -> indices indice .)


state 39

    (13) indice -> CORIZQ exp_numerica . CORDER
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    CORDER          shift and go to state 75
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    XOR             shift and go to state 53
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64


state 40

    (48) print_instr -> PRINT PARIZQ exp_numerica . PARDER PTCOMA
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PARDER          shift and go to state 76
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    XOR             shift and go to state 53
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64


state 41

    (49) unset_instr -> UNSET PARIZQ exp_numerica . PARDER PTCOMA
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PARDER          shift and go to state 77
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    XOR             shift and go to state 53
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64


state 42

    (50) if_instr -> IF PARIZQ condicion_instr . PARDER goto_instr

    PARDER          shift and go to state 78


state 43

    (51) condicion_instr -> exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PARDER          reduce using rule 51 (condicion_instr -> exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    XOR             shift and go to state 53
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64


state 44

    (42) exp_numerica -> VAR indices .
    (11) indices -> indices . indice
    (13) indice -> . CORIZQ exp_numerica CORDER

    PTCOMA          reduce using rule 42 (exp_numerica -> VAR indices .)
    MAS             reduce using rule 42 (exp_numerica -> VAR indices .)
    MENOS           reduce using rule 42 (exp_numerica -> VAR indices .)
    POR             reduce using rule 42 (exp_numerica -> VAR indices .)
    DIVIDIDO        reduce using rule 42 (exp_numerica -> VAR indices .)
    RESIDUO         reduce using rule 42 (exp_numerica -> VAR indices .)
    AND             reduce using rule 42 (exp_numerica -> VAR indices .)
    OR              reduce using rule 42 (exp_numerica -> VAR indices .)
    XOR             reduce using rule 42 (exp_numerica -> VAR indices .)
    BAND            reduce using rule 42 (exp_numerica -> VAR indices .)
    BOR             reduce using rule 42 (exp_numerica -> VAR indices .)
    BXOR            reduce using rule 42 (exp_numerica -> VAR indices .)
    SHIFTI          reduce using rule 42 (exp_numerica -> VAR indices .)
    SHIFTD          reduce using rule 42 (exp_numerica -> VAR indices .)
    IGUALQ          reduce using rule 42 (exp_numerica -> VAR indices .)
    NIGUALQ         reduce using rule 42 (exp_numerica -> VAR indices .)
    MAYORQ          reduce using rule 42 (exp_numerica -> VAR indices .)
    MENORQ          reduce using rule 42 (exp_numerica -> VAR indices .)
    MAYORIGUALQ     reduce using rule 42 (exp_numerica -> VAR indices .)
    MENORIGUALQ     reduce using rule 42 (exp_numerica -> VAR indices .)
    CORDER          reduce using rule 42 (exp_numerica -> VAR indices .)
    PARDER          reduce using rule 42 (exp_numerica -> VAR indices .)
    CORIZQ          shift and go to state 21

    indice                         shift and go to state 38

state 45

    (14) asignacion -> VAR IGUAL exp_numerica PTCOMA .

    VAR             reduce using rule 14 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    PRINT           reduce using rule 14 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    UNSET           reduce using rule 14 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    IF              reduce using rule 14 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    ID              reduce using rule 14 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    $end            reduce using rule 14 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)


state 46

    (15) exp_numerica -> exp_numerica MAS . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 79

state 47

    (16) exp_numerica -> exp_numerica MENOS . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 80

state 48

    (17) exp_numerica -> exp_numerica POR . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 81

state 49

    (18) exp_numerica -> exp_numerica DIVIDIDO . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 82

state 50

    (19) exp_numerica -> exp_numerica RESIDUO . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 83

state 51

    (20) exp_numerica -> exp_numerica AND . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 84

state 52

    (21) exp_numerica -> exp_numerica OR . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 85

state 53

    (22) exp_numerica -> exp_numerica XOR . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 86

state 54

    (23) exp_numerica -> exp_numerica BAND . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 87

state 55

    (24) exp_numerica -> exp_numerica BOR . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 88

state 56

    (25) exp_numerica -> exp_numerica BXOR . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 89

state 57

    (26) exp_numerica -> exp_numerica SHIFTI . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 90

state 58

    (27) exp_numerica -> exp_numerica SHIFTD . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 91

state 59

    (28) exp_numerica -> exp_numerica IGUALQ . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 92

state 60

    (29) exp_numerica -> exp_numerica NIGUALQ . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 93

state 61

    (30) exp_numerica -> exp_numerica MAYORQ . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 94

state 62

    (31) exp_numerica -> exp_numerica MENORQ . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 95

state 63

    (32) exp_numerica -> exp_numerica MAYORIGUALQ . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 96

state 64

    (33) exp_numerica -> exp_numerica MENORIGUALQ . exp_numerica
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 97

state 65

    (35) exp_numerica -> MENOS exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    MAS             reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    MENOS           reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    POR             reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    DIVIDIDO        reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    RESIDUO         reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    AND             reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    OR              reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    XOR             reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    BAND            reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    BOR             reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    BXOR            reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    SHIFTI          reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    SHIFTD          reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    IGUALQ          reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    NIGUALQ         reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    MAYORQ          reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    MENORQ          reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    MAYORIGUALQ     reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    MENORIGUALQ     reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    CORDER          reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)
    PARDER          reduce using rule 35 (exp_numerica -> MENOS exp_numerica .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! RESIDUO         [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 66

    (34) exp_numerica -> PARIZQ tipo_dato . PARDER VAR

    PARDER          shift and go to state 98


state 67

    (45) tipo_dato -> INT .

    PARDER          reduce using rule 45 (tipo_dato -> INT .)


state 68

    (46) tipo_dato -> FLOAT .

    PARDER          reduce using rule 46 (tipo_dato -> FLOAT .)


state 69

    (47) tipo_dato -> CHAR .

    PARDER          reduce using rule 47 (tipo_dato -> CHAR .)


state 70

    (36) exp_numerica -> NOT exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    MAS             reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    MENOS           reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    POR             reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    DIVIDIDO        reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    RESIDUO         reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    AND             reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    OR              reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    XOR             reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    BAND            reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    BOR             reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    BXOR            reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    SHIFTI          reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    SHIFTD          reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    IGUALQ          reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    NIGUALQ         reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    MAYORQ          reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    MENORQ          reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    MAYORIGUALQ     reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    MENORIGUALQ     reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    CORDER          reduce using rule 36 (exp_numerica -> NOT exp_numerica .)
    PARDER          reduce using rule 36 (exp_numerica -> NOT exp_numerica .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! RESIDUO         [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 71

    (37) exp_numerica -> BNOT exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    MAS             reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    MENOS           reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    POR             reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    DIVIDIDO        reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    RESIDUO         reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    AND             reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    OR              reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    XOR             reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    BAND            reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    BOR             reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    BXOR            reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    SHIFTI          reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    SHIFTD          reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    IGUALQ          reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    NIGUALQ         reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    MAYORQ          reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    MENORQ          reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    MAYORIGUALQ     reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    MENORIGUALQ     reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    CORDER          reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)
    PARDER          reduce using rule 37 (exp_numerica -> BNOT exp_numerica .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! RESIDUO         [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 72

    (38) exp_numerica -> ABS PARIZQ . exp_numerica PARDER
    (15) exp_numerica -> . exp_numerica MAS exp_numerica
    (16) exp_numerica -> . exp_numerica MENOS exp_numerica
    (17) exp_numerica -> . exp_numerica POR exp_numerica
    (18) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (19) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (20) exp_numerica -> . exp_numerica AND exp_numerica
    (21) exp_numerica -> . exp_numerica OR exp_numerica
    (22) exp_numerica -> . exp_numerica XOR exp_numerica
    (23) exp_numerica -> . exp_numerica BAND exp_numerica
    (24) exp_numerica -> . exp_numerica BOR exp_numerica
    (25) exp_numerica -> . exp_numerica BXOR exp_numerica
    (26) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (27) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (28) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (29) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (30) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (31) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (34) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (35) exp_numerica -> . MENOS exp_numerica
    (36) exp_numerica -> . NOT exp_numerica
    (37) exp_numerica -> . BNOT exp_numerica
    (38) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (39) exp_numerica -> . ENTERO
    (40) exp_numerica -> . DECIMAL
    (41) exp_numerica -> . VAR
    (42) exp_numerica -> . VAR indices
    (43) exp_numerica -> . CADENA
    (44) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 29
    MENOS           shift and go to state 28
    NOT             shift and go to state 30
    BNOT            shift and go to state 31
    ABS             shift and go to state 32
    ENTERO          shift and go to state 33
    DECIMAL         shift and go to state 34
    VAR             shift and go to state 26
    CADENA          shift and go to state 35
    ARRAY           shift and go to state 36

    exp_numerica                   shift and go to state 99

state 73

    (44) exp_numerica -> ARRAY PARIZQ . PARDER

    PARDER          shift and go to state 100


state 74

    (10) array_instr -> VAR indices IGUAL exp_numerica . PTCOMA
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          shift and go to state 101
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    XOR             shift and go to state 53
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64


state 75

    (13) indice -> CORIZQ exp_numerica CORDER .

    IGUAL           reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    CORIZQ          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    PTCOMA          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    MAS             reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    MENOS           reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    POR             reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    DIVIDIDO        reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    RESIDUO         reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    AND             reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    OR              reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    XOR             reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    BAND            reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    BOR             reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    BXOR            reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    SHIFTI          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    SHIFTD          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    IGUALQ          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    NIGUALQ         reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    MAYORQ          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    MENORQ          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    MAYORIGUALQ     reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    MENORIGUALQ     reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    CORDER          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)
    PARDER          reduce using rule 13 (indice -> CORIZQ exp_numerica CORDER .)


state 76

    (48) print_instr -> PRINT PARIZQ exp_numerica PARDER . PTCOMA

    PTCOMA          shift and go to state 102


state 77

    (49) unset_instr -> UNSET PARIZQ exp_numerica PARDER . PTCOMA

    PTCOMA          shift and go to state 103


state 78

    (50) if_instr -> IF PARIZQ condicion_instr PARDER . goto_instr
    (53) goto_instr -> . GOTO ID PTCOMA

    GOTO            shift and go to state 105

    goto_instr                     shift and go to state 104

state 79

    (15) exp_numerica -> exp_numerica MAS exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MAS             reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MENOS           reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    AND             reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    OR              reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    XOR             reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    BAND            reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    BOR             reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    BXOR            reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    SHIFTI          reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    SHIFTD          reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    IGUALQ          reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    NIGUALQ         reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MAYORQ          reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MENORQ          reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MAYORIGUALQ     reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MENORIGUALQ     reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    CORDER          reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    PARDER          reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .)
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50

  ! POR             [ reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 15 (exp_numerica -> exp_numerica MAS exp_numerica .) ]
  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 80

    (16) exp_numerica -> exp_numerica MENOS exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MAS             reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MENOS           reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    AND             reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    OR              reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    XOR             reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    BAND            reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    BOR             reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    BXOR            reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    SHIFTI          reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    SHIFTD          reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    IGUALQ          reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    NIGUALQ         reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MAYORQ          reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MENORQ          reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MAYORIGUALQ     reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MENORIGUALQ     reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    CORDER          reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    PARDER          reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50

  ! POR             [ reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 16 (exp_numerica -> exp_numerica MENOS exp_numerica .) ]
  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 81

    (17) exp_numerica -> exp_numerica POR exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    MAS             reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    MENOS           reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    POR             reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    DIVIDIDO        reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    RESIDUO         reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    AND             reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    OR              reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    XOR             reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    BAND            reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    BOR             reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    BXOR            reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    SHIFTI          reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    SHIFTD          reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    IGUALQ          reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    NIGUALQ         reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    MAYORQ          reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    MENORQ          reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    MAYORIGUALQ     reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    MENORIGUALQ     reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    CORDER          reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)
    PARDER          reduce using rule 17 (exp_numerica -> exp_numerica POR exp_numerica .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! RESIDUO         [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 82

    (18) exp_numerica -> exp_numerica DIVIDIDO exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MAS             reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MENOS           reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    POR             reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    DIVIDIDO        reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    RESIDUO         reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    AND             reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    OR              reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    XOR             reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    BAND            reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    BOR             reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    BXOR            reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    SHIFTI          reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    SHIFTD          reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    IGUALQ          reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    NIGUALQ         reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MAYORQ          reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MENORQ          reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MAYORIGUALQ     reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MENORIGUALQ     reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    CORDER          reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    PARDER          reduce using rule 18 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! RESIDUO         [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 83

    (19) exp_numerica -> exp_numerica RESIDUO exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MAS             reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MENOS           reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    POR             reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    DIVIDIDO        reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    RESIDUO         reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    AND             reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    OR              reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    XOR             reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    BAND            reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    BOR             reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    BXOR            reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    SHIFTI          reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    SHIFTD          reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    IGUALQ          reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    NIGUALQ         reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MAYORQ          reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MENORQ          reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MAYORIGUALQ     reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MENORIGUALQ     reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    CORDER          reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    PARDER          reduce using rule 19 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)

  ! MAS             [ shift and go to state 46 ]
  ! MENOS           [ shift and go to state 47 ]
  ! POR             [ shift and go to state 48 ]
  ! DIVIDIDO        [ shift and go to state 49 ]
  ! RESIDUO         [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 84

    (20) exp_numerica -> exp_numerica AND exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .)
    AND             reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .)
    OR              reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .)
    XOR             reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .)
    CORDER          reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .)
    PARDER          reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MENOS           [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! POR             [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! BAND            [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! BOR             [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! BXOR            [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MENORQ          [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 20 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]


state 85

    (21) exp_numerica -> exp_numerica OR exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .)
    OR              reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .)
    CORDER          reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .)
    PARDER          reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    XOR             shift and go to state 53
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MENOS           [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! POR             [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! AND             [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! XOR             [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! BAND            [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! BOR             [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! BXOR            [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MENORQ          [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 21 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! OR              [ shift and go to state 52 ]


state 86

    (22) exp_numerica -> exp_numerica XOR exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .)
    OR              reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .)
    XOR             reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .)
    CORDER          reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .)
    PARDER          reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MENOS           [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! POR             [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! AND             [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! BAND            [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! BOR             [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! BXOR            [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MENORQ          [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 22 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]


state 87

    (23) exp_numerica -> exp_numerica BAND exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    AND             reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    OR              reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    XOR             reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    BAND            reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    BOR             reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    BXOR            reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    CORDER          reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    PARDER          reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MENOS           [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! POR             [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MENORQ          [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 23 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]


state 88

    (24) exp_numerica -> exp_numerica BOR exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .)
    AND             reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .)
    OR              reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .)
    XOR             reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .)
    BOR             reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .)
    CORDER          reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .)
    PARDER          reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    BAND            shift and go to state 54
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MENOS           [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! POR             [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! BAND            [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! BXOR            [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MENORQ          [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 24 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BOR             [ shift and go to state 55 ]


state 89

    (25) exp_numerica -> exp_numerica BXOR exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    AND             reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    OR              reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    XOR             reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    BOR             reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    BXOR            reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    CORDER          reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    PARDER          reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    BAND            shift and go to state 54
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MENOS           [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! POR             [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! BAND            [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MENORQ          [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 25 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]


state 90

    (26) exp_numerica -> exp_numerica SHIFTI exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    AND             reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    OR              reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    XOR             reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    BAND            reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    BOR             reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    BXOR            reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    SHIFTI          reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    SHIFTD          reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    CORDER          reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    PARDER          reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MENOS           [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! POR             [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MENORQ          [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 26 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]


state 91

    (27) exp_numerica -> exp_numerica SHIFTD exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    AND             reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    OR              reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    XOR             reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    BAND            reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    BOR             reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    BXOR            reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    SHIFTI          reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    SHIFTD          reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    CORDER          reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    PARDER          reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MENOS           [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! POR             [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MENORQ          [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 27 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]


state 92

    (28) exp_numerica -> exp_numerica IGUALQ exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    AND             reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    OR              reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    XOR             reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    BAND            reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    BOR             reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    BXOR            reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    SHIFTI          reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    SHIFTD          reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    IGUALQ          reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    NIGUALQ         reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    CORDER          reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    PARDER          reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! POR             [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MENORQ          [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 28 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]


state 93

    (29) exp_numerica -> exp_numerica NIGUALQ exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    AND             reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    OR              reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    XOR             reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    BAND            reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    BOR             reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    BXOR            reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    SHIFTI          reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    SHIFTD          reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    IGUALQ          reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    NIGUALQ         reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    CORDER          reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    PARDER          reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64

  ! MAS             [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! POR             [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MENORQ          [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 29 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]


state 94

    (30) exp_numerica -> exp_numerica MAYORQ exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    AND             reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    OR              reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    XOR             reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    BAND            reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    BOR             reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    BXOR            reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    SHIFTI          reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    SHIFTD          reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    IGUALQ          reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    NIGUALQ         reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MAYORQ          reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MENORQ          reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MAYORIGUALQ     reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MENORIGUALQ     reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    CORDER          reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    PARDER          reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50

  ! MAS             [ reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! POR             [ reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 30 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 95

    (31) exp_numerica -> exp_numerica MENORQ exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    AND             reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    OR              reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    XOR             reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    BAND            reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    BOR             reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    BXOR            reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    SHIFTI          reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    SHIFTD          reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    IGUALQ          reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    NIGUALQ         reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MAYORQ          reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MENORQ          reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MAYORIGUALQ     reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MENORIGUALQ     reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    CORDER          reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    PARDER          reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50

  ! MAS             [ reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! POR             [ reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 31 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 96

    (32) exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    AND             reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    OR              reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    XOR             reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    BAND            reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    BOR             reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    BXOR            reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    SHIFTI          reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    SHIFTD          reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    IGUALQ          reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    NIGUALQ         reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MAYORQ          reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MENORQ          reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MAYORIGUALQ     reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MENORIGUALQ     reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    CORDER          reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    PARDER          reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50

  ! MAS             [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! POR             [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 97

    (33) exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    AND             reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    OR              reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    XOR             reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    BAND            reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    BOR             reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    BXOR            reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    SHIFTI          reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    SHIFTD          reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    IGUALQ          reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    NIGUALQ         reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MAYORQ          reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MENORQ          reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MAYORIGUALQ     reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MENORIGUALQ     reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    CORDER          reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    PARDER          reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50

  ! MAS             [ reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! POR             [ reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 33 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! XOR             [ shift and go to state 53 ]
  ! BAND            [ shift and go to state 54 ]
  ! BOR             [ shift and go to state 55 ]
  ! BXOR            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! IGUALQ          [ shift and go to state 59 ]
  ! NIGUALQ         [ shift and go to state 60 ]
  ! MAYORQ          [ shift and go to state 61 ]
  ! MENORQ          [ shift and go to state 62 ]
  ! MAYORIGUALQ     [ shift and go to state 63 ]
  ! MENORIGUALQ     [ shift and go to state 64 ]


state 98

    (34) exp_numerica -> PARIZQ tipo_dato PARDER . VAR

    VAR             shift and go to state 106


state 99

    (38) exp_numerica -> ABS PARIZQ exp_numerica . PARDER
    (15) exp_numerica -> exp_numerica . MAS exp_numerica
    (16) exp_numerica -> exp_numerica . MENOS exp_numerica
    (17) exp_numerica -> exp_numerica . POR exp_numerica
    (18) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (19) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (20) exp_numerica -> exp_numerica . AND exp_numerica
    (21) exp_numerica -> exp_numerica . OR exp_numerica
    (22) exp_numerica -> exp_numerica . XOR exp_numerica
    (23) exp_numerica -> exp_numerica . BAND exp_numerica
    (24) exp_numerica -> exp_numerica . BOR exp_numerica
    (25) exp_numerica -> exp_numerica . BXOR exp_numerica
    (26) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (27) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (28) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (29) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (30) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (31) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PARDER          shift and go to state 107
    MAS             shift and go to state 46
    MENOS           shift and go to state 47
    POR             shift and go to state 48
    DIVIDIDO        shift and go to state 49
    RESIDUO         shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    XOR             shift and go to state 53
    BAND            shift and go to state 54
    BOR             shift and go to state 55
    BXOR            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    IGUALQ          shift and go to state 59
    NIGUALQ         shift and go to state 60
    MAYORQ          shift and go to state 61
    MENORQ          shift and go to state 62
    MAYORIGUALQ     shift and go to state 63
    MENORIGUALQ     shift and go to state 64


state 100

    (44) exp_numerica -> ARRAY PARIZQ PARDER .

    PTCOMA          reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MAS             reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MENOS           reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    POR             reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    RESIDUO         reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    AND             reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    OR              reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    XOR             reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    BAND            reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    BOR             reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    BXOR            reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    SHIFTI          reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    SHIFTD          reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    IGUALQ          reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    NIGUALQ         reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MAYORQ          reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MENORQ          reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MAYORIGUALQ     reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MENORIGUALQ     reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    CORDER          reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)
    PARDER          reduce using rule 44 (exp_numerica -> ARRAY PARIZQ PARDER .)


state 101

    (10) array_instr -> VAR indices IGUAL exp_numerica PTCOMA .

    VAR             reduce using rule 10 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    PRINT           reduce using rule 10 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    UNSET           reduce using rule 10 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    IF              reduce using rule 10 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    ID              reduce using rule 10 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    $end            reduce using rule 10 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)


state 102

    (48) print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .

    VAR             reduce using rule 48 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    PRINT           reduce using rule 48 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    UNSET           reduce using rule 48 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    IF              reduce using rule 48 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    ID              reduce using rule 48 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    $end            reduce using rule 48 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)


state 103

    (49) unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .

    VAR             reduce using rule 49 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    PRINT           reduce using rule 49 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    UNSET           reduce using rule 49 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    IF              reduce using rule 49 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    ID              reduce using rule 49 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    $end            reduce using rule 49 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)


state 104

    (50) if_instr -> IF PARIZQ condicion_instr PARDER goto_instr .

    VAR             reduce using rule 50 (if_instr -> IF PARIZQ condicion_instr PARDER goto_instr .)
    PRINT           reduce using rule 50 (if_instr -> IF PARIZQ condicion_instr PARDER goto_instr .)
    UNSET           reduce using rule 50 (if_instr -> IF PARIZQ condicion_instr PARDER goto_instr .)
    IF              reduce using rule 50 (if_instr -> IF PARIZQ condicion_instr PARDER goto_instr .)
    ID              reduce using rule 50 (if_instr -> IF PARIZQ condicion_instr PARDER goto_instr .)
    $end            reduce using rule 50 (if_instr -> IF PARIZQ condicion_instr PARDER goto_instr .)


state 105

    (53) goto_instr -> GOTO . ID PTCOMA

    ID              shift and go to state 108


state 106

    (34) exp_numerica -> PARIZQ tipo_dato PARDER VAR .

    PTCOMA          reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MAS             reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MENOS           reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    POR             reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    DIVIDIDO        reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    RESIDUO         reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    AND             reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    OR              reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    XOR             reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    BAND            reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    BOR             reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    BXOR            reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    SHIFTI          reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    SHIFTD          reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    IGUALQ          reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    NIGUALQ         reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MAYORQ          reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MENORQ          reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MAYORIGUALQ     reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MENORIGUALQ     reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    CORDER          reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    PARDER          reduce using rule 34 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)


state 107

    (38) exp_numerica -> ABS PARIZQ exp_numerica PARDER .

    PTCOMA          reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MAS             reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MENOS           reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    POR             reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    DIVIDIDO        reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    RESIDUO         reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    AND             reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    OR              reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    XOR             reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    BAND            reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    BOR             reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    BXOR            reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    SHIFTI          reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    SHIFTD          reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    IGUALQ          reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    NIGUALQ         reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MAYORQ          reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MENORQ          reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MAYORIGUALQ     reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MENORIGUALQ     reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    CORDER          reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    PARDER          reduce using rule 38 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)


state 108

    (53) goto_instr -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 109


state 109

    (53) goto_instr -> GOTO ID PTCOMA .

    VAR             reduce using rule 53 (goto_instr -> GOTO ID PTCOMA .)
    PRINT           reduce using rule 53 (goto_instr -> GOTO ID PTCOMA .)
    UNSET           reduce using rule 53 (goto_instr -> GOTO ID PTCOMA .)
    IF              reduce using rule 53 (goto_instr -> GOTO ID PTCOMA .)
    ID              reduce using rule 53 (goto_instr -> GOTO ID PTCOMA .)
    $end            reduce using rule 53 (goto_instr -> GOTO ID PTCOMA .)

