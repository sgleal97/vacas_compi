Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    READ
    REVALUAR

Grammar

Rule 0     S' -> init
Rule 1     init -> MAIN DOSPUNTOS instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> asignacion
Rule 5     instruccion -> array_instr
Rule 6     instruccion -> print_instr
Rule 7     instruccion -> unset_instr
Rule 8     instruccion -> if_instr
Rule 9     instruccion -> etiqueta_instr
Rule 10    instruccion -> goto_instr
Rule 11    instruccion -> exit_instr
Rule 12    array_instr -> VAR indices IGUAL exp_numerica PTCOMA
Rule 13    indices -> indices indice
Rule 14    indices -> indice
Rule 15    indice -> CORIZQ exp_numerica CORDER
Rule 16    asignacion -> VAR IGUAL exp_numerica PTCOMA
Rule 17    exp_numerica -> exp_numerica MAS exp_numerica
Rule 18    exp_numerica -> exp_numerica MENOS exp_numerica
Rule 19    exp_numerica -> exp_numerica POR exp_numerica
Rule 20    exp_numerica -> exp_numerica DIVIDIDO exp_numerica
Rule 21    exp_numerica -> exp_numerica RESIDUO exp_numerica
Rule 22    exp_numerica -> exp_numerica AND exp_numerica
Rule 23    exp_numerica -> exp_numerica OR exp_numerica
Rule 24    exp_numerica -> exp_numerica XOR exp_numerica
Rule 25    exp_numerica -> exp_numerica BAND exp_numerica
Rule 26    exp_numerica -> exp_numerica BOR exp_numerica
Rule 27    exp_numerica -> exp_numerica BXOR exp_numerica
Rule 28    exp_numerica -> exp_numerica SHIFTI exp_numerica
Rule 29    exp_numerica -> exp_numerica SHIFTD exp_numerica
Rule 30    exp_numerica -> exp_numerica IGUALQ exp_numerica
Rule 31    exp_numerica -> exp_numerica NIGUALQ exp_numerica
Rule 32    exp_numerica -> exp_numerica MAYORQ exp_numerica
Rule 33    exp_numerica -> exp_numerica MENORQ exp_numerica
Rule 34    exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica
Rule 35    exp_numerica -> exp_numerica MENORIGUALQ exp_numerica
Rule 36    exp_numerica -> PARIZQ tipo_dato PARDER VAR
Rule 37    exp_numerica -> MENOS exp_numerica
Rule 38    exp_numerica -> NOT exp_numerica
Rule 39    exp_numerica -> BNOT exp_numerica
Rule 40    exp_numerica -> ABS PARIZQ exp_numerica PARDER
Rule 41    exp_numerica -> ENTERO
Rule 42    exp_numerica -> DECIMAL
Rule 43    exp_numerica -> VAR
Rule 44    exp_numerica -> VAR indices
Rule 45    exp_numerica -> CADENA
Rule 46    exp_numerica -> ARRAY PARIZQ PARDER
Rule 47    tipo_dato -> INT
Rule 48    tipo_dato -> FLOAT
Rule 49    tipo_dato -> CHAR
Rule 50    print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA
Rule 51    unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA
Rule 52    if_instr -> IF PARIZQ exp_numerica PARDER goto_instr
Rule 53    etiqueta_instr -> ID DOSPUNTOS
Rule 54    exit_instr -> EXIT PTCOMA
Rule 55    goto_instr -> GOTO ID PTCOMA

Terminals, with rules where they appear

ABS                  : 40
AND                  : 22
ARRAY                : 46
BAND                 : 25
BNOT                 : 39
BOR                  : 26
BXOR                 : 27
CADENA               : 45
CHAR                 : 49
CORDER               : 15
CORIZQ               : 15
DECIMAL              : 42
DIVIDIDO             : 20
DOSPUNTOS            : 1 53
ENTERO               : 41
EXIT                 : 54
FLOAT                : 48
GOTO                 : 55
ID                   : 53 55
IF                   : 52
IGUAL                : 12 16
IGUALQ               : 30
INT                  : 47
MAIN                 : 1
MAS                  : 17
MAYORIGUALQ          : 34
MAYORQ               : 32
MENORIGUALQ          : 35
MENORQ               : 33
MENOS                : 18 37
NIGUALQ              : 31
NOT                  : 38
OR                   : 23
PARDER               : 36 40 46 50 51 52
PARIZQ               : 36 40 46 50 51 52
POR                  : 19
PRINT                : 50
PTCOMA               : 12 16 50 51 54 55
READ                 : 
RESIDUO              : 21
REVALUAR             : 
SHIFTD               : 29
SHIFTI               : 28
UNSET                : 51
VAR                  : 12 16 36 43 44
XOR                  : 24
error                : 

Nonterminals, with rules where they appear

array_instr          : 5
asignacion           : 4
etiqueta_instr       : 9
exit_instr           : 11
exp_numerica         : 12 15 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 37 38 39 40 50 51 52
goto_instr           : 10 52
if_instr             : 8
indice               : 13 14
indices              : 12 13 44
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
print_instr          : 6
tipo_dato            : 36
unset_instr          : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . MAIN DOSPUNTOS instrucciones

    MAIN            shift and go to state 2

    init                           shift and go to state 1

state 1

    (0) S' -> init .



state 2

    (1) init -> MAIN . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 3


state 3

    (1) init -> MAIN DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . asignacion
    (5) instruccion -> . array_instr
    (6) instruccion -> . print_instr
    (7) instruccion -> . unset_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . etiqueta_instr
    (10) instruccion -> . goto_instr
    (11) instruccion -> . exit_instr
    (16) asignacion -> . VAR IGUAL exp_numerica PTCOMA
    (12) array_instr -> . VAR indices IGUAL exp_numerica PTCOMA
    (50) print_instr -> . PRINT PARIZQ exp_numerica PARDER PTCOMA
    (51) unset_instr -> . UNSET PARIZQ exp_numerica PARDER PTCOMA
    (52) if_instr -> . IF PARIZQ exp_numerica PARDER goto_instr
    (53) etiqueta_instr -> . ID DOSPUNTOS
    (55) goto_instr -> . GOTO ID PTCOMA
    (54) exit_instr -> . EXIT PTCOMA

    VAR             shift and go to state 14
    PRINT           shift and go to state 15
    UNSET           shift and go to state 16
    IF              shift and go to state 17
    ID              shift and go to state 18
    GOTO            shift and go to state 19
    EXIT            shift and go to state 20

    instrucciones                  shift and go to state 4
    instruccion                    shift and go to state 5
    asignacion                     shift and go to state 6
    array_instr                    shift and go to state 7
    print_instr                    shift and go to state 8
    unset_instr                    shift and go to state 9
    if_instr                       shift and go to state 10
    etiqueta_instr                 shift and go to state 11
    goto_instr                     shift and go to state 12
    exit_instr                     shift and go to state 13

state 4

    (1) init -> MAIN DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . asignacion
    (5) instruccion -> . array_instr
    (6) instruccion -> . print_instr
    (7) instruccion -> . unset_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . etiqueta_instr
    (10) instruccion -> . goto_instr
    (11) instruccion -> . exit_instr
    (16) asignacion -> . VAR IGUAL exp_numerica PTCOMA
    (12) array_instr -> . VAR indices IGUAL exp_numerica PTCOMA
    (50) print_instr -> . PRINT PARIZQ exp_numerica PARDER PTCOMA
    (51) unset_instr -> . UNSET PARIZQ exp_numerica PARDER PTCOMA
    (52) if_instr -> . IF PARIZQ exp_numerica PARDER goto_instr
    (53) etiqueta_instr -> . ID DOSPUNTOS
    (55) goto_instr -> . GOTO ID PTCOMA
    (54) exit_instr -> . EXIT PTCOMA

    $end            reduce using rule 1 (init -> MAIN DOSPUNTOS instrucciones .)
    VAR             shift and go to state 14
    PRINT           shift and go to state 15
    UNSET           shift and go to state 16
    IF              shift and go to state 17
    ID              shift and go to state 18
    GOTO            shift and go to state 19
    EXIT            shift and go to state 20

    instruccion                    shift and go to state 21
    asignacion                     shift and go to state 6
    array_instr                    shift and go to state 7
    print_instr                    shift and go to state 8
    unset_instr                    shift and go to state 9
    if_instr                       shift and go to state 10
    etiqueta_instr                 shift and go to state 11
    goto_instr                     shift and go to state 12
    exit_instr                     shift and go to state 13

state 5

    (3) instrucciones -> instruccion .

    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    UNSET           reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    GOTO            reduce using rule 3 (instrucciones -> instruccion .)
    EXIT            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 6

    (4) instruccion -> asignacion .

    VAR             reduce using rule 4 (instruccion -> asignacion .)
    PRINT           reduce using rule 4 (instruccion -> asignacion .)
    UNSET           reduce using rule 4 (instruccion -> asignacion .)
    IF              reduce using rule 4 (instruccion -> asignacion .)
    ID              reduce using rule 4 (instruccion -> asignacion .)
    GOTO            reduce using rule 4 (instruccion -> asignacion .)
    EXIT            reduce using rule 4 (instruccion -> asignacion .)
    $end            reduce using rule 4 (instruccion -> asignacion .)


state 7

    (5) instruccion -> array_instr .

    VAR             reduce using rule 5 (instruccion -> array_instr .)
    PRINT           reduce using rule 5 (instruccion -> array_instr .)
    UNSET           reduce using rule 5 (instruccion -> array_instr .)
    IF              reduce using rule 5 (instruccion -> array_instr .)
    ID              reduce using rule 5 (instruccion -> array_instr .)
    GOTO            reduce using rule 5 (instruccion -> array_instr .)
    EXIT            reduce using rule 5 (instruccion -> array_instr .)
    $end            reduce using rule 5 (instruccion -> array_instr .)


state 8

    (6) instruccion -> print_instr .

    VAR             reduce using rule 6 (instruccion -> print_instr .)
    PRINT           reduce using rule 6 (instruccion -> print_instr .)
    UNSET           reduce using rule 6 (instruccion -> print_instr .)
    IF              reduce using rule 6 (instruccion -> print_instr .)
    ID              reduce using rule 6 (instruccion -> print_instr .)
    GOTO            reduce using rule 6 (instruccion -> print_instr .)
    EXIT            reduce using rule 6 (instruccion -> print_instr .)
    $end            reduce using rule 6 (instruccion -> print_instr .)


state 9

    (7) instruccion -> unset_instr .

    VAR             reduce using rule 7 (instruccion -> unset_instr .)
    PRINT           reduce using rule 7 (instruccion -> unset_instr .)
    UNSET           reduce using rule 7 (instruccion -> unset_instr .)
    IF              reduce using rule 7 (instruccion -> unset_instr .)
    ID              reduce using rule 7 (instruccion -> unset_instr .)
    GOTO            reduce using rule 7 (instruccion -> unset_instr .)
    EXIT            reduce using rule 7 (instruccion -> unset_instr .)
    $end            reduce using rule 7 (instruccion -> unset_instr .)


state 10

    (8) instruccion -> if_instr .

    VAR             reduce using rule 8 (instruccion -> if_instr .)
    PRINT           reduce using rule 8 (instruccion -> if_instr .)
    UNSET           reduce using rule 8 (instruccion -> if_instr .)
    IF              reduce using rule 8 (instruccion -> if_instr .)
    ID              reduce using rule 8 (instruccion -> if_instr .)
    GOTO            reduce using rule 8 (instruccion -> if_instr .)
    EXIT            reduce using rule 8 (instruccion -> if_instr .)
    $end            reduce using rule 8 (instruccion -> if_instr .)


state 11

    (9) instruccion -> etiqueta_instr .

    VAR             reduce using rule 9 (instruccion -> etiqueta_instr .)
    PRINT           reduce using rule 9 (instruccion -> etiqueta_instr .)
    UNSET           reduce using rule 9 (instruccion -> etiqueta_instr .)
    IF              reduce using rule 9 (instruccion -> etiqueta_instr .)
    ID              reduce using rule 9 (instruccion -> etiqueta_instr .)
    GOTO            reduce using rule 9 (instruccion -> etiqueta_instr .)
    EXIT            reduce using rule 9 (instruccion -> etiqueta_instr .)
    $end            reduce using rule 9 (instruccion -> etiqueta_instr .)


state 12

    (10) instruccion -> goto_instr .

    VAR             reduce using rule 10 (instruccion -> goto_instr .)
    PRINT           reduce using rule 10 (instruccion -> goto_instr .)
    UNSET           reduce using rule 10 (instruccion -> goto_instr .)
    IF              reduce using rule 10 (instruccion -> goto_instr .)
    ID              reduce using rule 10 (instruccion -> goto_instr .)
    GOTO            reduce using rule 10 (instruccion -> goto_instr .)
    EXIT            reduce using rule 10 (instruccion -> goto_instr .)
    $end            reduce using rule 10 (instruccion -> goto_instr .)


state 13

    (11) instruccion -> exit_instr .

    VAR             reduce using rule 11 (instruccion -> exit_instr .)
    PRINT           reduce using rule 11 (instruccion -> exit_instr .)
    UNSET           reduce using rule 11 (instruccion -> exit_instr .)
    IF              reduce using rule 11 (instruccion -> exit_instr .)
    ID              reduce using rule 11 (instruccion -> exit_instr .)
    GOTO            reduce using rule 11 (instruccion -> exit_instr .)
    EXIT            reduce using rule 11 (instruccion -> exit_instr .)
    $end            reduce using rule 11 (instruccion -> exit_instr .)


state 14

    (16) asignacion -> VAR . IGUAL exp_numerica PTCOMA
    (12) array_instr -> VAR . indices IGUAL exp_numerica PTCOMA
    (13) indices -> . indices indice
    (14) indices -> . indice
    (15) indice -> . CORIZQ exp_numerica CORDER

    IGUAL           shift and go to state 22
    CORIZQ          shift and go to state 25

    indices                        shift and go to state 23
    indice                         shift and go to state 24

state 15

    (50) print_instr -> PRINT . PARIZQ exp_numerica PARDER PTCOMA

    PARIZQ          shift and go to state 26


state 16

    (51) unset_instr -> UNSET . PARIZQ exp_numerica PARDER PTCOMA

    PARIZQ          shift and go to state 27


state 17

    (52) if_instr -> IF . PARIZQ exp_numerica PARDER goto_instr

    PARIZQ          shift and go to state 28


state 18

    (53) etiqueta_instr -> ID . DOSPUNTOS

    DOSPUNTOS       shift and go to state 29


state 19

    (55) goto_instr -> GOTO . ID PTCOMA

    ID              shift and go to state 30


state 20

    (54) exit_instr -> EXIT . PTCOMA

    PTCOMA          shift and go to state 31


state 21

    (2) instrucciones -> instrucciones instruccion .

    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    UNSET           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    GOTO            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    EXIT            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 22

    (16) asignacion -> VAR IGUAL . exp_numerica PTCOMA
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 33

state 23

    (12) array_instr -> VAR indices . IGUAL exp_numerica PTCOMA
    (13) indices -> indices . indice
    (15) indice -> . CORIZQ exp_numerica CORDER

    IGUAL           shift and go to state 43
    CORIZQ          shift and go to state 25

    indice                         shift and go to state 44

state 24

    (14) indices -> indice .

    IGUAL           reduce using rule 14 (indices -> indice .)
    CORIZQ          reduce using rule 14 (indices -> indice .)
    PTCOMA          reduce using rule 14 (indices -> indice .)
    MAS             reduce using rule 14 (indices -> indice .)
    MENOS           reduce using rule 14 (indices -> indice .)
    POR             reduce using rule 14 (indices -> indice .)
    DIVIDIDO        reduce using rule 14 (indices -> indice .)
    RESIDUO         reduce using rule 14 (indices -> indice .)
    AND             reduce using rule 14 (indices -> indice .)
    OR              reduce using rule 14 (indices -> indice .)
    XOR             reduce using rule 14 (indices -> indice .)
    BAND            reduce using rule 14 (indices -> indice .)
    BOR             reduce using rule 14 (indices -> indice .)
    BXOR            reduce using rule 14 (indices -> indice .)
    SHIFTI          reduce using rule 14 (indices -> indice .)
    SHIFTD          reduce using rule 14 (indices -> indice .)
    IGUALQ          reduce using rule 14 (indices -> indice .)
    NIGUALQ         reduce using rule 14 (indices -> indice .)
    MAYORQ          reduce using rule 14 (indices -> indice .)
    MENORQ          reduce using rule 14 (indices -> indice .)
    MAYORIGUALQ     reduce using rule 14 (indices -> indice .)
    MENORIGUALQ     reduce using rule 14 (indices -> indice .)
    CORDER          reduce using rule 14 (indices -> indice .)
    PARDER          reduce using rule 14 (indices -> indice .)


state 25

    (15) indice -> CORIZQ . exp_numerica CORDER
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 45

state 26

    (50) print_instr -> PRINT PARIZQ . exp_numerica PARDER PTCOMA
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 46

state 27

    (51) unset_instr -> UNSET PARIZQ . exp_numerica PARDER PTCOMA
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 47

state 28

    (52) if_instr -> IF PARIZQ . exp_numerica PARDER goto_instr
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 48

state 29

    (53) etiqueta_instr -> ID DOSPUNTOS .

    VAR             reduce using rule 53 (etiqueta_instr -> ID DOSPUNTOS .)
    PRINT           reduce using rule 53 (etiqueta_instr -> ID DOSPUNTOS .)
    UNSET           reduce using rule 53 (etiqueta_instr -> ID DOSPUNTOS .)
    IF              reduce using rule 53 (etiqueta_instr -> ID DOSPUNTOS .)
    ID              reduce using rule 53 (etiqueta_instr -> ID DOSPUNTOS .)
    GOTO            reduce using rule 53 (etiqueta_instr -> ID DOSPUNTOS .)
    EXIT            reduce using rule 53 (etiqueta_instr -> ID DOSPUNTOS .)
    $end            reduce using rule 53 (etiqueta_instr -> ID DOSPUNTOS .)


state 30

    (55) goto_instr -> GOTO ID . PTCOMA

    PTCOMA          shift and go to state 49


state 31

    (54) exit_instr -> EXIT PTCOMA .

    VAR             reduce using rule 54 (exit_instr -> EXIT PTCOMA .)
    PRINT           reduce using rule 54 (exit_instr -> EXIT PTCOMA .)
    UNSET           reduce using rule 54 (exit_instr -> EXIT PTCOMA .)
    IF              reduce using rule 54 (exit_instr -> EXIT PTCOMA .)
    ID              reduce using rule 54 (exit_instr -> EXIT PTCOMA .)
    GOTO            reduce using rule 54 (exit_instr -> EXIT PTCOMA .)
    EXIT            reduce using rule 54 (exit_instr -> EXIT PTCOMA .)
    $end            reduce using rule 54 (exit_instr -> EXIT PTCOMA .)


state 32

    (43) exp_numerica -> VAR .
    (44) exp_numerica -> VAR . indices
    (13) indices -> . indices indice
    (14) indices -> . indice
    (15) indice -> . CORIZQ exp_numerica CORDER

    PTCOMA          reduce using rule 43 (exp_numerica -> VAR .)
    MAS             reduce using rule 43 (exp_numerica -> VAR .)
    MENOS           reduce using rule 43 (exp_numerica -> VAR .)
    POR             reduce using rule 43 (exp_numerica -> VAR .)
    DIVIDIDO        reduce using rule 43 (exp_numerica -> VAR .)
    RESIDUO         reduce using rule 43 (exp_numerica -> VAR .)
    AND             reduce using rule 43 (exp_numerica -> VAR .)
    OR              reduce using rule 43 (exp_numerica -> VAR .)
    XOR             reduce using rule 43 (exp_numerica -> VAR .)
    BAND            reduce using rule 43 (exp_numerica -> VAR .)
    BOR             reduce using rule 43 (exp_numerica -> VAR .)
    BXOR            reduce using rule 43 (exp_numerica -> VAR .)
    SHIFTI          reduce using rule 43 (exp_numerica -> VAR .)
    SHIFTD          reduce using rule 43 (exp_numerica -> VAR .)
    IGUALQ          reduce using rule 43 (exp_numerica -> VAR .)
    NIGUALQ         reduce using rule 43 (exp_numerica -> VAR .)
    MAYORQ          reduce using rule 43 (exp_numerica -> VAR .)
    MENORQ          reduce using rule 43 (exp_numerica -> VAR .)
    MAYORIGUALQ     reduce using rule 43 (exp_numerica -> VAR .)
    MENORIGUALQ     reduce using rule 43 (exp_numerica -> VAR .)
    CORDER          reduce using rule 43 (exp_numerica -> VAR .)
    PARDER          reduce using rule 43 (exp_numerica -> VAR .)
    CORIZQ          shift and go to state 25

    indices                        shift and go to state 50
    indice                         shift and go to state 24

state 33

    (16) asignacion -> VAR IGUAL exp_numerica . PTCOMA
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          shift and go to state 51
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58
    XOR             shift and go to state 59
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70


state 34

    (37) exp_numerica -> MENOS . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 71

state 35

    (36) exp_numerica -> PARIZQ . tipo_dato PARDER VAR
    (47) tipo_dato -> . INT
    (48) tipo_dato -> . FLOAT
    (49) tipo_dato -> . CHAR

    INT             shift and go to state 73
    FLOAT           shift and go to state 74
    CHAR            shift and go to state 75

    tipo_dato                      shift and go to state 72

state 36

    (38) exp_numerica -> NOT . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 76

state 37

    (39) exp_numerica -> BNOT . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 77

state 38

    (40) exp_numerica -> ABS . PARIZQ exp_numerica PARDER

    PARIZQ          shift and go to state 78


state 39

    (41) exp_numerica -> ENTERO .

    PTCOMA          reduce using rule 41 (exp_numerica -> ENTERO .)
    MAS             reduce using rule 41 (exp_numerica -> ENTERO .)
    MENOS           reduce using rule 41 (exp_numerica -> ENTERO .)
    POR             reduce using rule 41 (exp_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 41 (exp_numerica -> ENTERO .)
    RESIDUO         reduce using rule 41 (exp_numerica -> ENTERO .)
    AND             reduce using rule 41 (exp_numerica -> ENTERO .)
    OR              reduce using rule 41 (exp_numerica -> ENTERO .)
    XOR             reduce using rule 41 (exp_numerica -> ENTERO .)
    BAND            reduce using rule 41 (exp_numerica -> ENTERO .)
    BOR             reduce using rule 41 (exp_numerica -> ENTERO .)
    BXOR            reduce using rule 41 (exp_numerica -> ENTERO .)
    SHIFTI          reduce using rule 41 (exp_numerica -> ENTERO .)
    SHIFTD          reduce using rule 41 (exp_numerica -> ENTERO .)
    IGUALQ          reduce using rule 41 (exp_numerica -> ENTERO .)
    NIGUALQ         reduce using rule 41 (exp_numerica -> ENTERO .)
    MAYORQ          reduce using rule 41 (exp_numerica -> ENTERO .)
    MENORQ          reduce using rule 41 (exp_numerica -> ENTERO .)
    MAYORIGUALQ     reduce using rule 41 (exp_numerica -> ENTERO .)
    MENORIGUALQ     reduce using rule 41 (exp_numerica -> ENTERO .)
    CORDER          reduce using rule 41 (exp_numerica -> ENTERO .)
    PARDER          reduce using rule 41 (exp_numerica -> ENTERO .)


state 40

    (42) exp_numerica -> DECIMAL .

    PTCOMA          reduce using rule 42 (exp_numerica -> DECIMAL .)
    MAS             reduce using rule 42 (exp_numerica -> DECIMAL .)
    MENOS           reduce using rule 42 (exp_numerica -> DECIMAL .)
    POR             reduce using rule 42 (exp_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 42 (exp_numerica -> DECIMAL .)
    RESIDUO         reduce using rule 42 (exp_numerica -> DECIMAL .)
    AND             reduce using rule 42 (exp_numerica -> DECIMAL .)
    OR              reduce using rule 42 (exp_numerica -> DECIMAL .)
    XOR             reduce using rule 42 (exp_numerica -> DECIMAL .)
    BAND            reduce using rule 42 (exp_numerica -> DECIMAL .)
    BOR             reduce using rule 42 (exp_numerica -> DECIMAL .)
    BXOR            reduce using rule 42 (exp_numerica -> DECIMAL .)
    SHIFTI          reduce using rule 42 (exp_numerica -> DECIMAL .)
    SHIFTD          reduce using rule 42 (exp_numerica -> DECIMAL .)
    IGUALQ          reduce using rule 42 (exp_numerica -> DECIMAL .)
    NIGUALQ         reduce using rule 42 (exp_numerica -> DECIMAL .)
    MAYORQ          reduce using rule 42 (exp_numerica -> DECIMAL .)
    MENORQ          reduce using rule 42 (exp_numerica -> DECIMAL .)
    MAYORIGUALQ     reduce using rule 42 (exp_numerica -> DECIMAL .)
    MENORIGUALQ     reduce using rule 42 (exp_numerica -> DECIMAL .)
    CORDER          reduce using rule 42 (exp_numerica -> DECIMAL .)
    PARDER          reduce using rule 42 (exp_numerica -> DECIMAL .)


state 41

    (45) exp_numerica -> CADENA .

    PTCOMA          reduce using rule 45 (exp_numerica -> CADENA .)
    MAS             reduce using rule 45 (exp_numerica -> CADENA .)
    MENOS           reduce using rule 45 (exp_numerica -> CADENA .)
    POR             reduce using rule 45 (exp_numerica -> CADENA .)
    DIVIDIDO        reduce using rule 45 (exp_numerica -> CADENA .)
    RESIDUO         reduce using rule 45 (exp_numerica -> CADENA .)
    AND             reduce using rule 45 (exp_numerica -> CADENA .)
    OR              reduce using rule 45 (exp_numerica -> CADENA .)
    XOR             reduce using rule 45 (exp_numerica -> CADENA .)
    BAND            reduce using rule 45 (exp_numerica -> CADENA .)
    BOR             reduce using rule 45 (exp_numerica -> CADENA .)
    BXOR            reduce using rule 45 (exp_numerica -> CADENA .)
    SHIFTI          reduce using rule 45 (exp_numerica -> CADENA .)
    SHIFTD          reduce using rule 45 (exp_numerica -> CADENA .)
    IGUALQ          reduce using rule 45 (exp_numerica -> CADENA .)
    NIGUALQ         reduce using rule 45 (exp_numerica -> CADENA .)
    MAYORQ          reduce using rule 45 (exp_numerica -> CADENA .)
    MENORQ          reduce using rule 45 (exp_numerica -> CADENA .)
    MAYORIGUALQ     reduce using rule 45 (exp_numerica -> CADENA .)
    MENORIGUALQ     reduce using rule 45 (exp_numerica -> CADENA .)
    CORDER          reduce using rule 45 (exp_numerica -> CADENA .)
    PARDER          reduce using rule 45 (exp_numerica -> CADENA .)


state 42

    (46) exp_numerica -> ARRAY . PARIZQ PARDER

    PARIZQ          shift and go to state 79


state 43

    (12) array_instr -> VAR indices IGUAL . exp_numerica PTCOMA
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 80

state 44

    (13) indices -> indices indice .

    IGUAL           reduce using rule 13 (indices -> indices indice .)
    CORIZQ          reduce using rule 13 (indices -> indices indice .)
    PTCOMA          reduce using rule 13 (indices -> indices indice .)
    MAS             reduce using rule 13 (indices -> indices indice .)
    MENOS           reduce using rule 13 (indices -> indices indice .)
    POR             reduce using rule 13 (indices -> indices indice .)
    DIVIDIDO        reduce using rule 13 (indices -> indices indice .)
    RESIDUO         reduce using rule 13 (indices -> indices indice .)
    AND             reduce using rule 13 (indices -> indices indice .)
    OR              reduce using rule 13 (indices -> indices indice .)
    XOR             reduce using rule 13 (indices -> indices indice .)
    BAND            reduce using rule 13 (indices -> indices indice .)
    BOR             reduce using rule 13 (indices -> indices indice .)
    BXOR            reduce using rule 13 (indices -> indices indice .)
    SHIFTI          reduce using rule 13 (indices -> indices indice .)
    SHIFTD          reduce using rule 13 (indices -> indices indice .)
    IGUALQ          reduce using rule 13 (indices -> indices indice .)
    NIGUALQ         reduce using rule 13 (indices -> indices indice .)
    MAYORQ          reduce using rule 13 (indices -> indices indice .)
    MENORQ          reduce using rule 13 (indices -> indices indice .)
    MAYORIGUALQ     reduce using rule 13 (indices -> indices indice .)
    MENORIGUALQ     reduce using rule 13 (indices -> indices indice .)
    CORDER          reduce using rule 13 (indices -> indices indice .)
    PARDER          reduce using rule 13 (indices -> indices indice .)


state 45

    (15) indice -> CORIZQ exp_numerica . CORDER
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    CORDER          shift and go to state 81
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58
    XOR             shift and go to state 59
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70


state 46

    (50) print_instr -> PRINT PARIZQ exp_numerica . PARDER PTCOMA
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PARDER          shift and go to state 82
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58
    XOR             shift and go to state 59
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70


state 47

    (51) unset_instr -> UNSET PARIZQ exp_numerica . PARDER PTCOMA
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PARDER          shift and go to state 83
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58
    XOR             shift and go to state 59
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70


state 48

    (52) if_instr -> IF PARIZQ exp_numerica . PARDER goto_instr
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PARDER          shift and go to state 84
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58
    XOR             shift and go to state 59
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70


state 49

    (55) goto_instr -> GOTO ID PTCOMA .

    VAR             reduce using rule 55 (goto_instr -> GOTO ID PTCOMA .)
    PRINT           reduce using rule 55 (goto_instr -> GOTO ID PTCOMA .)
    UNSET           reduce using rule 55 (goto_instr -> GOTO ID PTCOMA .)
    IF              reduce using rule 55 (goto_instr -> GOTO ID PTCOMA .)
    ID              reduce using rule 55 (goto_instr -> GOTO ID PTCOMA .)
    GOTO            reduce using rule 55 (goto_instr -> GOTO ID PTCOMA .)
    EXIT            reduce using rule 55 (goto_instr -> GOTO ID PTCOMA .)
    $end            reduce using rule 55 (goto_instr -> GOTO ID PTCOMA .)


state 50

    (44) exp_numerica -> VAR indices .
    (13) indices -> indices . indice
    (15) indice -> . CORIZQ exp_numerica CORDER

    PTCOMA          reduce using rule 44 (exp_numerica -> VAR indices .)
    MAS             reduce using rule 44 (exp_numerica -> VAR indices .)
    MENOS           reduce using rule 44 (exp_numerica -> VAR indices .)
    POR             reduce using rule 44 (exp_numerica -> VAR indices .)
    DIVIDIDO        reduce using rule 44 (exp_numerica -> VAR indices .)
    RESIDUO         reduce using rule 44 (exp_numerica -> VAR indices .)
    AND             reduce using rule 44 (exp_numerica -> VAR indices .)
    OR              reduce using rule 44 (exp_numerica -> VAR indices .)
    XOR             reduce using rule 44 (exp_numerica -> VAR indices .)
    BAND            reduce using rule 44 (exp_numerica -> VAR indices .)
    BOR             reduce using rule 44 (exp_numerica -> VAR indices .)
    BXOR            reduce using rule 44 (exp_numerica -> VAR indices .)
    SHIFTI          reduce using rule 44 (exp_numerica -> VAR indices .)
    SHIFTD          reduce using rule 44 (exp_numerica -> VAR indices .)
    IGUALQ          reduce using rule 44 (exp_numerica -> VAR indices .)
    NIGUALQ         reduce using rule 44 (exp_numerica -> VAR indices .)
    MAYORQ          reduce using rule 44 (exp_numerica -> VAR indices .)
    MENORQ          reduce using rule 44 (exp_numerica -> VAR indices .)
    MAYORIGUALQ     reduce using rule 44 (exp_numerica -> VAR indices .)
    MENORIGUALQ     reduce using rule 44 (exp_numerica -> VAR indices .)
    CORDER          reduce using rule 44 (exp_numerica -> VAR indices .)
    PARDER          reduce using rule 44 (exp_numerica -> VAR indices .)
    CORIZQ          shift and go to state 25

    indice                         shift and go to state 44

state 51

    (16) asignacion -> VAR IGUAL exp_numerica PTCOMA .

    VAR             reduce using rule 16 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    PRINT           reduce using rule 16 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    UNSET           reduce using rule 16 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    IF              reduce using rule 16 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    ID              reduce using rule 16 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    GOTO            reduce using rule 16 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    EXIT            reduce using rule 16 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)
    $end            reduce using rule 16 (asignacion -> VAR IGUAL exp_numerica PTCOMA .)


state 52

    (17) exp_numerica -> exp_numerica MAS . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 85

state 53

    (18) exp_numerica -> exp_numerica MENOS . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 86

state 54

    (19) exp_numerica -> exp_numerica POR . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 87

state 55

    (20) exp_numerica -> exp_numerica DIVIDIDO . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 88

state 56

    (21) exp_numerica -> exp_numerica RESIDUO . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 89

state 57

    (22) exp_numerica -> exp_numerica AND . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 90

state 58

    (23) exp_numerica -> exp_numerica OR . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 91

state 59

    (24) exp_numerica -> exp_numerica XOR . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 92

state 60

    (25) exp_numerica -> exp_numerica BAND . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 93

state 61

    (26) exp_numerica -> exp_numerica BOR . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 94

state 62

    (27) exp_numerica -> exp_numerica BXOR . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 95

state 63

    (28) exp_numerica -> exp_numerica SHIFTI . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 96

state 64

    (29) exp_numerica -> exp_numerica SHIFTD . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 97

state 65

    (30) exp_numerica -> exp_numerica IGUALQ . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 98

state 66

    (31) exp_numerica -> exp_numerica NIGUALQ . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 99

state 67

    (32) exp_numerica -> exp_numerica MAYORQ . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 100

state 68

    (33) exp_numerica -> exp_numerica MENORQ . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 101

state 69

    (34) exp_numerica -> exp_numerica MAYORIGUALQ . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 102

state 70

    (35) exp_numerica -> exp_numerica MENORIGUALQ . exp_numerica
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 103

state 71

    (37) exp_numerica -> MENOS exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    MAS             reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    MENOS           reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    POR             reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    DIVIDIDO        reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    RESIDUO         reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    AND             reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    OR              reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    XOR             reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    BAND            reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    BOR             reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    BXOR            reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    SHIFTI          reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    SHIFTD          reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    IGUALQ          reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    NIGUALQ         reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    MAYORQ          reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    MENORQ          reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    MAYORIGUALQ     reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    MENORIGUALQ     reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    CORDER          reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)
    PARDER          reduce using rule 37 (exp_numerica -> MENOS exp_numerica .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! RESIDUO         [ shift and go to state 56 ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 72

    (36) exp_numerica -> PARIZQ tipo_dato . PARDER VAR

    PARDER          shift and go to state 104


state 73

    (47) tipo_dato -> INT .

    PARDER          reduce using rule 47 (tipo_dato -> INT .)


state 74

    (48) tipo_dato -> FLOAT .

    PARDER          reduce using rule 48 (tipo_dato -> FLOAT .)


state 75

    (49) tipo_dato -> CHAR .

    PARDER          reduce using rule 49 (tipo_dato -> CHAR .)


state 76

    (38) exp_numerica -> NOT exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    MAS             reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    MENOS           reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    POR             reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    DIVIDIDO        reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    RESIDUO         reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    AND             reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    OR              reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    XOR             reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    BAND            reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    BOR             reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    BXOR            reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    SHIFTI          reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    SHIFTD          reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    IGUALQ          reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    NIGUALQ         reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    MAYORQ          reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    MENORQ          reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    MAYORIGUALQ     reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    MENORIGUALQ     reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    CORDER          reduce using rule 38 (exp_numerica -> NOT exp_numerica .)
    PARDER          reduce using rule 38 (exp_numerica -> NOT exp_numerica .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! RESIDUO         [ shift and go to state 56 ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 77

    (39) exp_numerica -> BNOT exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    MAS             reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    MENOS           reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    POR             reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    DIVIDIDO        reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    RESIDUO         reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    AND             reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    OR              reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    XOR             reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    BAND            reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    BOR             reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    BXOR            reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    SHIFTI          reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    SHIFTD          reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    IGUALQ          reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    NIGUALQ         reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    MAYORQ          reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    MENORQ          reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    MAYORIGUALQ     reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    MENORIGUALQ     reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    CORDER          reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)
    PARDER          reduce using rule 39 (exp_numerica -> BNOT exp_numerica .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! RESIDUO         [ shift and go to state 56 ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 78

    (40) exp_numerica -> ABS PARIZQ . exp_numerica PARDER
    (17) exp_numerica -> . exp_numerica MAS exp_numerica
    (18) exp_numerica -> . exp_numerica MENOS exp_numerica
    (19) exp_numerica -> . exp_numerica POR exp_numerica
    (20) exp_numerica -> . exp_numerica DIVIDIDO exp_numerica
    (21) exp_numerica -> . exp_numerica RESIDUO exp_numerica
    (22) exp_numerica -> . exp_numerica AND exp_numerica
    (23) exp_numerica -> . exp_numerica OR exp_numerica
    (24) exp_numerica -> . exp_numerica XOR exp_numerica
    (25) exp_numerica -> . exp_numerica BAND exp_numerica
    (26) exp_numerica -> . exp_numerica BOR exp_numerica
    (27) exp_numerica -> . exp_numerica BXOR exp_numerica
    (28) exp_numerica -> . exp_numerica SHIFTI exp_numerica
    (29) exp_numerica -> . exp_numerica SHIFTD exp_numerica
    (30) exp_numerica -> . exp_numerica IGUALQ exp_numerica
    (31) exp_numerica -> . exp_numerica NIGUALQ exp_numerica
    (32) exp_numerica -> . exp_numerica MAYORQ exp_numerica
    (33) exp_numerica -> . exp_numerica MENORQ exp_numerica
    (34) exp_numerica -> . exp_numerica MAYORIGUALQ exp_numerica
    (35) exp_numerica -> . exp_numerica MENORIGUALQ exp_numerica
    (36) exp_numerica -> . PARIZQ tipo_dato PARDER VAR
    (37) exp_numerica -> . MENOS exp_numerica
    (38) exp_numerica -> . NOT exp_numerica
    (39) exp_numerica -> . BNOT exp_numerica
    (40) exp_numerica -> . ABS PARIZQ exp_numerica PARDER
    (41) exp_numerica -> . ENTERO
    (42) exp_numerica -> . DECIMAL
    (43) exp_numerica -> . VAR
    (44) exp_numerica -> . VAR indices
    (45) exp_numerica -> . CADENA
    (46) exp_numerica -> . ARRAY PARIZQ PARDER

    PARIZQ          shift and go to state 35
    MENOS           shift and go to state 34
    NOT             shift and go to state 36
    BNOT            shift and go to state 37
    ABS             shift and go to state 38
    ENTERO          shift and go to state 39
    DECIMAL         shift and go to state 40
    VAR             shift and go to state 32
    CADENA          shift and go to state 41
    ARRAY           shift and go to state 42

    exp_numerica                   shift and go to state 105

state 79

    (46) exp_numerica -> ARRAY PARIZQ . PARDER

    PARDER          shift and go to state 106


state 80

    (12) array_instr -> VAR indices IGUAL exp_numerica . PTCOMA
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          shift and go to state 107
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58
    XOR             shift and go to state 59
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70


state 81

    (15) indice -> CORIZQ exp_numerica CORDER .

    IGUAL           reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    CORIZQ          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    PTCOMA          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    MAS             reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    MENOS           reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    POR             reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    DIVIDIDO        reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    RESIDUO         reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    AND             reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    OR              reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    XOR             reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    BAND            reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    BOR             reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    BXOR            reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    SHIFTI          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    SHIFTD          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    IGUALQ          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    NIGUALQ         reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    MAYORQ          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    MENORQ          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    MAYORIGUALQ     reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    MENORIGUALQ     reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    CORDER          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)
    PARDER          reduce using rule 15 (indice -> CORIZQ exp_numerica CORDER .)


state 82

    (50) print_instr -> PRINT PARIZQ exp_numerica PARDER . PTCOMA

    PTCOMA          shift and go to state 108


state 83

    (51) unset_instr -> UNSET PARIZQ exp_numerica PARDER . PTCOMA

    PTCOMA          shift and go to state 109


state 84

    (52) if_instr -> IF PARIZQ exp_numerica PARDER . goto_instr
    (55) goto_instr -> . GOTO ID PTCOMA

    GOTO            shift and go to state 19

    goto_instr                     shift and go to state 110

state 85

    (17) exp_numerica -> exp_numerica MAS exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MAS             reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MENOS           reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    AND             reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    OR              reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    XOR             reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    BAND            reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    BOR             reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    BXOR            reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    SHIFTI          reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    SHIFTD          reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    IGUALQ          reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    NIGUALQ         reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MAYORQ          reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MENORQ          reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MAYORIGUALQ     reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    MENORIGUALQ     reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    CORDER          reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    PARDER          reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .)
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56

  ! POR             [ reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 17 (exp_numerica -> exp_numerica MAS exp_numerica .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 86

    (18) exp_numerica -> exp_numerica MENOS exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MAS             reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MENOS           reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    AND             reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    OR              reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    XOR             reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    BAND            reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    BOR             reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    BXOR            reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    SHIFTI          reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    SHIFTD          reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    IGUALQ          reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    NIGUALQ         reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MAYORQ          reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MENORQ          reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MAYORIGUALQ     reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    MENORIGUALQ     reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    CORDER          reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    PARDER          reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .)
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56

  ! POR             [ reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 18 (exp_numerica -> exp_numerica MENOS exp_numerica .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 87

    (19) exp_numerica -> exp_numerica POR exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    MAS             reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    MENOS           reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    POR             reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    DIVIDIDO        reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    RESIDUO         reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    AND             reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    OR              reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    XOR             reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    BAND            reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    BOR             reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    BXOR            reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    SHIFTI          reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    SHIFTD          reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    IGUALQ          reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    NIGUALQ         reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    MAYORQ          reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    MENORQ          reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    MAYORIGUALQ     reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    MENORIGUALQ     reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    CORDER          reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)
    PARDER          reduce using rule 19 (exp_numerica -> exp_numerica POR exp_numerica .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! RESIDUO         [ shift and go to state 56 ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 88

    (20) exp_numerica -> exp_numerica DIVIDIDO exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MAS             reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MENOS           reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    POR             reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    DIVIDIDO        reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    RESIDUO         reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    AND             reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    OR              reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    XOR             reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    BAND            reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    BOR             reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    BXOR            reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    SHIFTI          reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    SHIFTD          reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    IGUALQ          reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    NIGUALQ         reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MAYORQ          reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MENORQ          reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MAYORIGUALQ     reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    MENORIGUALQ     reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    CORDER          reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)
    PARDER          reduce using rule 20 (exp_numerica -> exp_numerica DIVIDIDO exp_numerica .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! RESIDUO         [ shift and go to state 56 ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 89

    (21) exp_numerica -> exp_numerica RESIDUO exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MAS             reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MENOS           reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    POR             reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    DIVIDIDO        reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    RESIDUO         reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    AND             reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    OR              reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    XOR             reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    BAND            reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    BOR             reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    BXOR            reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    SHIFTI          reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    SHIFTD          reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    IGUALQ          reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    NIGUALQ         reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MAYORQ          reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MENORQ          reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MAYORIGUALQ     reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    MENORIGUALQ     reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    CORDER          reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)
    PARDER          reduce using rule 21 (exp_numerica -> exp_numerica RESIDUO exp_numerica .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! POR             [ shift and go to state 54 ]
  ! DIVIDIDO        [ shift and go to state 55 ]
  ! RESIDUO         [ shift and go to state 56 ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 90

    (22) exp_numerica -> exp_numerica AND exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .)
    AND             reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .)
    OR              reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .)
    XOR             reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .)
    CORDER          reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .)
    PARDER          reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MENOS           [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! POR             [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! BAND            [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! BOR             [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! BXOR            [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MENORQ          [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 22 (exp_numerica -> exp_numerica AND exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]


state 91

    (23) exp_numerica -> exp_numerica OR exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .)
    OR              reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .)
    CORDER          reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .)
    PARDER          reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    XOR             shift and go to state 59
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MENOS           [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! POR             [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! AND             [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! XOR             [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! BAND            [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! BOR             [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! BXOR            [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MENORQ          [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 23 (exp_numerica -> exp_numerica OR exp_numerica .) ]
  ! OR              [ shift and go to state 58 ]


state 92

    (24) exp_numerica -> exp_numerica XOR exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .)
    OR              reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .)
    XOR             reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .)
    CORDER          reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .)
    PARDER          reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MENOS           [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! POR             [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! AND             [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! BAND            [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! BOR             [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! BXOR            [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MENORQ          [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 24 (exp_numerica -> exp_numerica XOR exp_numerica .) ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]


state 93

    (25) exp_numerica -> exp_numerica BAND exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    AND             reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    OR              reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    XOR             reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    BAND            reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    BOR             reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    BXOR            reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    CORDER          reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    PARDER          reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MENOS           [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! POR             [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MENORQ          [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 25 (exp_numerica -> exp_numerica BAND exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]


state 94

    (26) exp_numerica -> exp_numerica BOR exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .)
    AND             reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .)
    OR              reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .)
    XOR             reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .)
    BOR             reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .)
    CORDER          reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .)
    PARDER          reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    BAND            shift and go to state 60
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MENOS           [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! POR             [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! BAND            [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! BXOR            [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MENORQ          [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 26 (exp_numerica -> exp_numerica BOR exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 61 ]


state 95

    (27) exp_numerica -> exp_numerica BXOR exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    AND             reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    OR              reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    XOR             reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    BOR             reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    BXOR            reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    CORDER          reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    PARDER          reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    BAND            shift and go to state 60
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MENOS           [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! POR             [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! BAND            [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! SHIFTI          [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! SHIFTD          [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MENORQ          [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 27 (exp_numerica -> exp_numerica BXOR exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]


state 96

    (28) exp_numerica -> exp_numerica SHIFTI exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    AND             reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    OR              reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    XOR             reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    BAND            reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    BOR             reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    BXOR            reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    SHIFTI          reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    SHIFTD          reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    CORDER          reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    PARDER          reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MENOS           [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! POR             [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MENORQ          [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 28 (exp_numerica -> exp_numerica SHIFTI exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]


state 97

    (29) exp_numerica -> exp_numerica SHIFTD exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    AND             reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    OR              reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    XOR             reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    BAND            reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    BOR             reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    BXOR            reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    SHIFTI          reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    SHIFTD          reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    CORDER          reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    PARDER          reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MENOS           [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! POR             [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! IGUALQ          [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! NIGUALQ         [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MENORQ          [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 29 (exp_numerica -> exp_numerica SHIFTD exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]


state 98

    (30) exp_numerica -> exp_numerica IGUALQ exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    AND             reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    OR              reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    XOR             reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    BAND            reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    BOR             reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    BXOR            reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    SHIFTI          reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    SHIFTD          reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    IGUALQ          reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    NIGUALQ         reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    CORDER          reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    PARDER          reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! POR             [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MENORQ          [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 30 (exp_numerica -> exp_numerica IGUALQ exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]


state 99

    (31) exp_numerica -> exp_numerica NIGUALQ exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    AND             reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    OR              reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    XOR             reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    BAND            reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    BOR             reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    BXOR            reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    SHIFTI          reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    SHIFTD          reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    IGUALQ          reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    NIGUALQ         reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    CORDER          reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    PARDER          reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70

  ! MAS             [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! POR             [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MAYORQ          [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MENORQ          [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MAYORIGUALQ     [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! MENORIGUALQ     [ reduce using rule 31 (exp_numerica -> exp_numerica NIGUALQ exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]


state 100

    (32) exp_numerica -> exp_numerica MAYORQ exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    AND             reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    OR              reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    XOR             reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    BAND            reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    BOR             reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    BXOR            reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    SHIFTI          reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    SHIFTD          reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    IGUALQ          reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    NIGUALQ         reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MAYORQ          reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MENORQ          reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MAYORIGUALQ     reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MENORIGUALQ     reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    CORDER          reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    PARDER          reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56

  ! MAS             [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! POR             [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 32 (exp_numerica -> exp_numerica MAYORQ exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 101

    (33) exp_numerica -> exp_numerica MENORQ exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    AND             reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    OR              reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    XOR             reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    BAND            reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    BOR             reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    BXOR            reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    SHIFTI          reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    SHIFTD          reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    IGUALQ          reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    NIGUALQ         reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MAYORQ          reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MENORQ          reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MAYORIGUALQ     reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MENORIGUALQ     reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    CORDER          reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    PARDER          reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56

  ! MAS             [ reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! POR             [ reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 33 (exp_numerica -> exp_numerica MENORQ exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 102

    (34) exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    AND             reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    OR              reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    XOR             reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    BAND            reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    BOR             reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    BXOR            reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    SHIFTI          reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    SHIFTD          reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    IGUALQ          reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    NIGUALQ         reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MAYORQ          reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MENORQ          reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MAYORIGUALQ     reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MENORIGUALQ     reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    CORDER          reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    PARDER          reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56

  ! MAS             [ reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! POR             [ reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 34 (exp_numerica -> exp_numerica MAYORIGUALQ exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 103

    (35) exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PTCOMA          reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    AND             reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    OR              reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    XOR             reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    BAND            reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    BOR             reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    BXOR            reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    SHIFTI          reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    SHIFTD          reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    IGUALQ          reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    NIGUALQ         reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MAYORQ          reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MENORQ          reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MAYORIGUALQ     reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MENORIGUALQ     reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    CORDER          reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    PARDER          reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56

  ! MAS             [ reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! MENOS           [ reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! POR             [ reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! RESIDUO         [ reduce using rule 35 (exp_numerica -> exp_numerica MENORIGUALQ exp_numerica .) ]
  ! AND             [ shift and go to state 57 ]
  ! OR              [ shift and go to state 58 ]
  ! XOR             [ shift and go to state 59 ]
  ! BAND            [ shift and go to state 60 ]
  ! BOR             [ shift and go to state 61 ]
  ! BXOR            [ shift and go to state 62 ]
  ! SHIFTI          [ shift and go to state 63 ]
  ! SHIFTD          [ shift and go to state 64 ]
  ! IGUALQ          [ shift and go to state 65 ]
  ! NIGUALQ         [ shift and go to state 66 ]
  ! MAYORQ          [ shift and go to state 67 ]
  ! MENORQ          [ shift and go to state 68 ]
  ! MAYORIGUALQ     [ shift and go to state 69 ]
  ! MENORIGUALQ     [ shift and go to state 70 ]


state 104

    (36) exp_numerica -> PARIZQ tipo_dato PARDER . VAR

    VAR             shift and go to state 111


state 105

    (40) exp_numerica -> ABS PARIZQ exp_numerica . PARDER
    (17) exp_numerica -> exp_numerica . MAS exp_numerica
    (18) exp_numerica -> exp_numerica . MENOS exp_numerica
    (19) exp_numerica -> exp_numerica . POR exp_numerica
    (20) exp_numerica -> exp_numerica . DIVIDIDO exp_numerica
    (21) exp_numerica -> exp_numerica . RESIDUO exp_numerica
    (22) exp_numerica -> exp_numerica . AND exp_numerica
    (23) exp_numerica -> exp_numerica . OR exp_numerica
    (24) exp_numerica -> exp_numerica . XOR exp_numerica
    (25) exp_numerica -> exp_numerica . BAND exp_numerica
    (26) exp_numerica -> exp_numerica . BOR exp_numerica
    (27) exp_numerica -> exp_numerica . BXOR exp_numerica
    (28) exp_numerica -> exp_numerica . SHIFTI exp_numerica
    (29) exp_numerica -> exp_numerica . SHIFTD exp_numerica
    (30) exp_numerica -> exp_numerica . IGUALQ exp_numerica
    (31) exp_numerica -> exp_numerica . NIGUALQ exp_numerica
    (32) exp_numerica -> exp_numerica . MAYORQ exp_numerica
    (33) exp_numerica -> exp_numerica . MENORQ exp_numerica
    (34) exp_numerica -> exp_numerica . MAYORIGUALQ exp_numerica
    (35) exp_numerica -> exp_numerica . MENORIGUALQ exp_numerica

    PARDER          shift and go to state 112
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    POR             shift and go to state 54
    DIVIDIDO        shift and go to state 55
    RESIDUO         shift and go to state 56
    AND             shift and go to state 57
    OR              shift and go to state 58
    XOR             shift and go to state 59
    BAND            shift and go to state 60
    BOR             shift and go to state 61
    BXOR            shift and go to state 62
    SHIFTI          shift and go to state 63
    SHIFTD          shift and go to state 64
    IGUALQ          shift and go to state 65
    NIGUALQ         shift and go to state 66
    MAYORQ          shift and go to state 67
    MENORQ          shift and go to state 68
    MAYORIGUALQ     shift and go to state 69
    MENORIGUALQ     shift and go to state 70


state 106

    (46) exp_numerica -> ARRAY PARIZQ PARDER .

    PTCOMA          reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MAS             reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MENOS           reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    POR             reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    RESIDUO         reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    AND             reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    OR              reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    XOR             reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    BAND            reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    BOR             reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    BXOR            reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    SHIFTI          reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    SHIFTD          reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    IGUALQ          reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    NIGUALQ         reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MAYORQ          reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MENORQ          reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MAYORIGUALQ     reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    MENORIGUALQ     reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    CORDER          reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)
    PARDER          reduce using rule 46 (exp_numerica -> ARRAY PARIZQ PARDER .)


state 107

    (12) array_instr -> VAR indices IGUAL exp_numerica PTCOMA .

    VAR             reduce using rule 12 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    PRINT           reduce using rule 12 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    UNSET           reduce using rule 12 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    IF              reduce using rule 12 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    ID              reduce using rule 12 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    GOTO            reduce using rule 12 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    EXIT            reduce using rule 12 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)
    $end            reduce using rule 12 (array_instr -> VAR indices IGUAL exp_numerica PTCOMA .)


state 108

    (50) print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .

    VAR             reduce using rule 50 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    PRINT           reduce using rule 50 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    UNSET           reduce using rule 50 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    IF              reduce using rule 50 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    ID              reduce using rule 50 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    GOTO            reduce using rule 50 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    EXIT            reduce using rule 50 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)
    $end            reduce using rule 50 (print_instr -> PRINT PARIZQ exp_numerica PARDER PTCOMA .)


state 109

    (51) unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .

    VAR             reduce using rule 51 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    PRINT           reduce using rule 51 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    UNSET           reduce using rule 51 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    IF              reduce using rule 51 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    ID              reduce using rule 51 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    GOTO            reduce using rule 51 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    EXIT            reduce using rule 51 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)
    $end            reduce using rule 51 (unset_instr -> UNSET PARIZQ exp_numerica PARDER PTCOMA .)


state 110

    (52) if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .

    VAR             reduce using rule 52 (if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .)
    PRINT           reduce using rule 52 (if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .)
    UNSET           reduce using rule 52 (if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .)
    IF              reduce using rule 52 (if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .)
    ID              reduce using rule 52 (if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .)
    GOTO            reduce using rule 52 (if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .)
    EXIT            reduce using rule 52 (if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .)
    $end            reduce using rule 52 (if_instr -> IF PARIZQ exp_numerica PARDER goto_instr .)


state 111

    (36) exp_numerica -> PARIZQ tipo_dato PARDER VAR .

    PTCOMA          reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MAS             reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MENOS           reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    POR             reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    DIVIDIDO        reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    RESIDUO         reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    AND             reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    OR              reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    XOR             reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    BAND            reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    BOR             reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    BXOR            reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    SHIFTI          reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    SHIFTD          reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    IGUALQ          reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    NIGUALQ         reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MAYORQ          reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MENORQ          reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MAYORIGUALQ     reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    MENORIGUALQ     reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    CORDER          reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)
    PARDER          reduce using rule 36 (exp_numerica -> PARIZQ tipo_dato PARDER VAR .)


state 112

    (40) exp_numerica -> ABS PARIZQ exp_numerica PARDER .

    PTCOMA          reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MAS             reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MENOS           reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    POR             reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    DIVIDIDO        reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    RESIDUO         reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    AND             reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    OR              reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    XOR             reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    BAND            reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    BOR             reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    BXOR            reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    SHIFTI          reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    SHIFTD          reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    IGUALQ          reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    NIGUALQ         reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MAYORQ          reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MENORQ          reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MAYORIGUALQ     reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    MENORIGUALQ     reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    CORDER          reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)
    PARDER          reduce using rule 40 (exp_numerica -> ABS PARIZQ exp_numerica PARDER .)

